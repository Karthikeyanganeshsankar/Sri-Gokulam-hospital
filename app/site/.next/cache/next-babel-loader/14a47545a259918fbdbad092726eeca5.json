{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { FiX } from 'react-icons/fi';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\n\nconst Toggle = ({\n  title,\n  palettes,\n  name\n}) => {\n  const {\n    config\n  } = useSelector(state => ({\n    config: state.config\n  }), shallowEqual);\n\n  let {\n    rightSidebar\n  } = _objectSpread({}, config);\n\n  const dispatch = useDispatch();\n  return __jsx(\"button\", {\n    onClick: () => dispatch({\n      type: 'SET_CONFIG_KEY',\n      key: 'rightSidebar',\n      value: !rightSidebar\n    }),\n    className: \"btn btn-transparent btn-circle\"\n  }, __jsx(FiX, {\n    size: 18\n  }));\n};\n\nexport default Toggle;","map":null,"metadata":{},"sourceType":"module"}