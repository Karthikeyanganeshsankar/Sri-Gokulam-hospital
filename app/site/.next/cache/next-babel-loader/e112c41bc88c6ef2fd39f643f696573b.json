{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport { FiChevronRight } from 'react-icons/fi';\n\nvar Item = function Item(_ref) {\n  var url = _ref.url,\n      icon = _ref.icon,\n      title = _ref.title,\n      badge = _ref.badge,\n      items = _ref.items;\n\n  var _useState = useState(true),\n      hidden = _useState[0],\n      setHidden = _useState[1];\n\n  var router = useRouter();\n\n  var _router = _objectSpread({}, router),\n      pathname = _router.pathname;\n\n  var active = pathname === url ? true : false;\n\n  if (pathname === '/' && url === '/dashboard') {\n    active = true;\n  }\n\n  if (pathname === '/' && url !== '/dashboard') {\n    active = false;\n  }\n\n  if (items.length === 0) {\n    return __jsx(Link, {\n      href: url\n    }, __jsx(\"a\", {\n      className: \"left-sidebar-item \".concat(active ? 'active' : '')\n    }, icon, __jsx(\"span\", {\n      className: \"title\"\n    }, title), badge && __jsx(\"span\", {\n      className: \"badge badge-circle badge-sm \".concat(badge.color)\n    }, badge.text)));\n  }\n\n  return __jsx(\"button\", {\n    onClick: function onClick() {\n      return setHidden(!hidden);\n    },\n    className: \"left-sidebar-item \".concat(active ? 'active' : '', \" \").concat(hidden ? 'hidden-sibling' : 'open-sibling')\n  }, icon, __jsx(\"span\", {\n    className: \"title\"\n  }, title), badge && __jsx(\"span\", {\n    className: \"badge badge-circle badge-sm \".concat(badge.color)\n  }, badge.text), __jsx(FiChevronRight, {\n    className: \"ml-auto arrow\"\n  }));\n};\n\nexport default Item;","map":null,"metadata":{},"sourceType":"module"}