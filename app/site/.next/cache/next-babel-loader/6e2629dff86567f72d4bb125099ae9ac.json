{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\outside pro\\\\git new\\\\app\\\\site\\\\src\\\\components\\\\left-sidebar-1\\\\item.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport { FiChevronRight } from 'react-icons/fi';\n\nvar Item = function Item(_ref) {\n  _s();\n\n  var url = _ref.url,\n      icon = _ref.icon,\n      title = _ref.title,\n      badge = _ref.badge,\n      items = _ref.items;\n\n  var _useState = useState(true),\n      hidden = _useState[0],\n      setHidden = _useState[1];\n\n  var router = useRouter();\n\n  var _router = _objectSpread({}, router),\n      pathname = _router.pathname;\n\n  var active = pathname === url ? true : false;\n\n  if (pathname === '/' && url === '/dashboard') {\n    active = true;\n  }\n\n  if (pathname === '/' && url !== '/dashboard') {\n    active = false;\n  }\n\n  if (items.length === 0) {\n    return __jsx(Link, {\n      href: url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, __jsx(\"a\", {\n      className: \"left-sidebar-item \".concat(active ? 'active' : ''),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, icon, __jsx(\"span\", {\n      className: \"title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, title), badge && __jsx(\"span\", {\n      className: \"badge badge-circle badge-sm \".concat(badge.color),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, badge.text)));\n  }\n\n  return __jsx(\"button\", {\n    onClick: function onClick() {\n      return setHidden(!hidden);\n    },\n    className: \"left-sidebar-item \".concat(active ? 'active' : '', \" \").concat(hidden ? 'hidden-sibling' : 'open-sibling'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, icon, __jsx(\"span\", {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, title), badge && __jsx(\"span\", {\n    className: \"badge badge-circle badge-sm \".concat(badge.color),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, badge.text), __jsx(FiChevronRight, {\n    className: \"ml-auto arrow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(Item, \"EJVRkHWey0rblLHSzx+PNkdnrec=\", false, function () {\n  return [useRouter];\n});\n\n_c = Item;\nexport default Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"sources":["E:/outside pro/git new/app/site/src/components/left-sidebar-1/item.js"],"names":["React","useState","useRouter","Link","FiChevronRight","Item","url","icon","title","badge","items","hidden","setHidden","router","pathname","active","length","color","text"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,cAAR,QAA6B,gBAA7B;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAsC;AAAA;;AAAA,MAApCC,GAAoC,QAApCA,GAAoC;AAAA,MAA/BC,IAA+B,QAA/BA,IAA+B;AAAA,MAAzBC,KAAyB,QAAzBA,KAAyB;AAAA,MAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,MAAXC,KAAW,QAAXA,KAAW;;AAAA,kBACrBT,QAAQ,CAAC,IAAD,CADa;AAAA,MAC1CU,MAD0C;AAAA,MAClCC,SADkC;;AAEjD,MAAMC,MAAM,GAAGX,SAAS,EAAxB;;AAFiD,kCAG5BW,MAH4B;AAAA,MAG5CC,QAH4C,WAG5CA,QAH4C;;AAIjD,MAAIC,MAAM,GAAGD,QAAQ,KAAKR,GAAb,GAAmB,IAAnB,GAA0B,KAAvC;;AACA,MAAIQ,QAAQ,KAAK,GAAb,IAAoBR,GAAG,KAAK,YAAhC,EAA8C;AAC5CS,IAAAA,MAAM,GAAG,IAAT;AACD;;AACD,MAAID,QAAQ,KAAK,GAAb,IAAoBR,GAAG,KAAK,YAAhC,EAA8C;AAC5CS,IAAAA,MAAM,GAAG,KAAT;AACD;;AACD,MAAIL,KAAK,CAACM,MAAN,KAAiB,CAArB,EAAwB;AACtB,WACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAEV,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,8BAAuBS,MAAM,GAAG,QAAH,GAAc,EAA3C,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGR,IADH,EAEE;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBC,KAAzB,CAFF,EAGGC,KAAK,IACJ;AAAM,MAAA,SAAS,wCAAiCA,KAAK,CAACQ,KAAvC,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGR,KAAK,CAACS,IADT,CAJJ,CADF,CADF;AAaD;;AACD,SACE;AACE,IAAA,OAAO,EAAE;AAAA,aAAMN,SAAS,CAAC,CAACD,MAAF,CAAf;AAAA,KADX;AAEE,IAAA,SAAS,8BAAuBI,MAAM,GAAG,QAAH,GAAc,EAA3C,cACPJ,MAAM,GAAG,gBAAH,GAAsB,cADrB,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGJ,IALH,EAME;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBC,KAAzB,CANF,EAOGC,KAAK,IACJ;AAAM,IAAA,SAAS,wCAAiCA,KAAK,CAACQ,KAAvC,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,KAAK,CAACS,IADT,CARJ,EAYE,MAAC,cAAD;AAAgB,IAAA,SAAS,EAAC,eAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAgBD,CA1CD;;GAAMb,I;UAEWH,S;;;KAFXG,I;AA4CN,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport {useRouter} from 'next/router'\r\nimport Link from 'next/link'\r\nimport {FiChevronRight} from 'react-icons/fi'\r\n\r\nconst Item = ({url, icon, title, badge, items}) => {\r\n  const [hidden, setHidden] = useState(true)\r\n  const router = useRouter()\r\n  let {pathname} = {...router}\r\n  let active = pathname === url ? true : false\r\n  if (pathname === '/' && url === '/dashboard') {\r\n    active = true\r\n  }\r\n  if (pathname === '/' && url !== '/dashboard') {\r\n    active = false\r\n  }\r\n  if (items.length === 0) {\r\n    return (\r\n      <Link href={url}>\r\n        <a className={`left-sidebar-item ${active ? 'active' : ''}`}>\r\n          {icon}\r\n          <span className=\"title\">{title}</span>\r\n          {badge && (\r\n            <span className={`badge badge-circle badge-sm ${badge.color}`}>\r\n              {badge.text}\r\n            </span>\r\n          )}\r\n        </a>\r\n      </Link>\r\n    )\r\n  }\r\n  return (\r\n    <button\r\n      onClick={() => setHidden(!hidden)}\r\n      className={`left-sidebar-item ${active ? 'active' : ''} ${\r\n        hidden ? 'hidden-sibling' : 'open-sibling'\r\n      }`}>\r\n      {icon}\r\n      <span className=\"title\">{title}</span>\r\n      {badge && (\r\n        <span className={`badge badge-circle badge-sm ${badge.color}`}>\r\n          {badge.text}\r\n        </span>\r\n      )}\r\n      <FiChevronRight className=\"ml-auto arrow\" />\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Item\r\n"]},"metadata":{},"sourceType":"module"}