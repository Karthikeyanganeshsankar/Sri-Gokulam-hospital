{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport Portal from '../portal';\nimport { FiX, FiAlertCircle } from 'react-icons/fi';\n\nconst Notification = () => {\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n\n  const show = () => {\n    setVisible(true);\n  };\n\n  const hide = () => {\n    setVisible(false);\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      show();\n    }, 2000);\n  }, []);\n  const item = {\n    outerClassNames: 'z-50 h-auto w-full p-0',\n    innerClassNames: 'bg-blue-500 text-white',\n    animation: 'block',\n    icon: __jsx(FiAlertCircle, {\n      className: \"mr-2 stroke-current h-4 w-4\"\n    }),\n    content: __jsx(\"span\", null, \"This is an important message!\")\n  };\n\n  const {\n    outerClassNames,\n    innerClassNames,\n    animation,\n    icon,\n    content\n  } = _objectSpread({}, item);\n\n  return __jsx(React.Fragment, null, visible && __jsx(Portal, {\n    selector: \"#portal\"\n  }, __jsx(\"div\", {\n    className: `${outerClassNames} ${show ? animation : ''}`\n  }, __jsx(\"div\", {\n    className: `w-full flex items-center justify-start p-4 ${innerClassNames}`\n  }, icon && __jsx(\"div\", {\n    className: \"flex-shrink\"\n  }, icon), __jsx(\"div\", {\n    className: \"flex-grow\"\n  }, content), __jsx(\"div\", {\n    className: \"flex-shrink\"\n  }, __jsx(\"button\", {\n    onClick: hide,\n    className: \"ml-auto flex items-center justify-center\"\n  }, __jsx(FiX, {\n    className: \"stroke-current h-4 w-4 ml-2\"\n  })))))));\n};\n\nexport default Notification;","map":null,"metadata":{},"sourceType":"module"}