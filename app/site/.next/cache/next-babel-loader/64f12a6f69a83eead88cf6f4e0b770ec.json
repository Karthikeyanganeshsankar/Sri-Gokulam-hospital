{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport Alert from '../alerts';\n\nconst FormValidation = ({\n  items,\n  onSubmit,\n  alerts\n}) => {\n  const {\n    handleSubmit,\n    errors,\n    register\n  } = useForm();\n\n  const onSubmitFn = data => {\n    if (onSubmit) {\n      onSubmit(data);\n    }\n  };\n\n  items = items.map(item => {\n    item['ref'] = register(item['error']);\n    return item;\n  });\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmitFn),\n    className: \"form flex flex-wrap w-full\"\n  }, alerts && items.map((item, i) => {\n    if (!errors[item.name]) return null;\n    let msg = errors[item.name].message;\n    if (msg.length === 0) msg = `${item.label} is required`;\n    return __jsx(\"div\", {\n      className: \"flex flex-col w-full\"\n    }, errors[item.name] && __jsx(\"div\", {\n      className: \"mb-2\",\n      key: i\n    }, __jsx(Alert, {\n      color: \"bg-transparent border-red-500 text-red-500\",\n      borderLeft: true,\n      raised: true\n    }, msg)));\n  }), __jsx(\"div\", {\n    className: \"w-full\"\n  }, items.map((item, i) => {\n    if (item.type === 'checkbox') {\n      return __jsx(\"div\", {\n        className: \"form-element\"\n      }, item.label && __jsx(\"div\", {\n        className: \"form-label\"\n      }, item.label), __jsx(\"div\", {\n        className: \"flex items-center justify-start space-x-2\"\n      }, item.options.map((option, j) => __jsx(\"label\", {\n        className: \"flex items-center justify-start space-x-2\"\n      }, __jsx(\"input\", {\n        ref: item.ref,\n        type: \"checkbox\",\n        value: option.value,\n        name: item.name,\n        className: `form-checkbox h-4 w-4 ${errors[item.name] ? 'text-red-500' : ''}`\n      }), __jsx(\"span\", {\n        className: `${errors[item.name] ? 'text-red-500' : ''}`\n      }, option.label)))));\n    }\n\n    if (item.type === 'radio') {\n      return __jsx(\"div\", {\n        className: \"form-element\"\n      }, item.label && __jsx(\"div\", {\n        className: \"form-label\"\n      }, item.label), __jsx(\"div\", {\n        className: \"flex items-center justify-start space-x-2\"\n      }, item.options.map((option, j) => __jsx(\"label\", {\n        className: \"flex items-center justify-start space-x-2\"\n      }, __jsx(\"input\", {\n        type: \"radio\",\n        value: option.value,\n        name: item.name,\n        ref: register({\n          required: true\n        }),\n        className: `form-radio h-4 w-4 ${errors[item.name] ? 'text-red-500' : ''}`\n      }), __jsx(\"span\", {\n        className: `${errors[item.name] ? 'text-red-500' : ''}`\n      }, option.label)))));\n    }\n\n    if (item.type === 'select') {\n      return __jsx(\"div\", {\n        className: \"form-element\"\n      }, item.label && __jsx(\"div\", {\n        className: \"form-label\"\n      }, item.label), __jsx(\"select\", {\n        ref: item.ref,\n        name: item.name,\n        className: `form-select ${errors[item.name] ? 'border border-red-500' : ''}`\n      }, item.options.map((option, j) => __jsx(\"option\", {\n        key: j,\n        value: option.value\n      }, option.label))), !alerts && errors[item.name] && __jsx(\"div\", {\n        className: \"form-error\"\n      }, errors[item.name].message));\n    }\n\n    if (item.type === 'textarea') {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"form-element\"\n      }, item.label && __jsx(\"div\", {\n        className: \"form-label\"\n      }, item.label), __jsx(\"textarea\", {\n        ref: item.ref,\n        name: item.name,\n        className: `form-textarea ${errors[item.name] ? 'border border-red-500' : ''}`,\n        rows: \"3\",\n        placeholder: item.placeholder\n      }), !alerts && errors[item.name] && __jsx(\"div\", {\n        className: \"form-error\"\n      }, errors[item.name].message)));\n    }\n\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"form-element\"\n    }, item.label && __jsx(\"div\", {\n      className: \"form-label\"\n    }, item.label), __jsx(\"input\", {\n      ref: item.ref,\n      name: item.name,\n      type: item.type,\n      className: `form-input ${errors[item.name] ? 'border-red-500' : ''}`,\n      placeholder: item.placeholder\n    }), !alerts && errors[item.name] && __jsx(\"div\", {\n      className: \"form-error\"\n    }, errors[item.name].message)));\n  })), __jsx(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-default bg-blue-500 hover:bg-blue-600 text-white btn-rounded\"\n  }));\n};\n\nexport default FormValidation;","map":null,"metadata":{},"sourceType":"module"}