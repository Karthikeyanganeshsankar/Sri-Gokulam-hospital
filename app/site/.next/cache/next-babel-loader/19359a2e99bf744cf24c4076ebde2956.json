{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport { FiChevronRight } from 'react-icons/fi';\n\nconst Item = ({\n  url,\n  icon,\n  title,\n  badge,\n  items\n}) => {\n  const {\n    0: hidden,\n    1: setHidden\n  } = useState(true);\n  const router = useRouter();\n\n  let {\n    pathname\n  } = _objectSpread({}, router);\n\n  let active = pathname === url ? true : false;\n\n  if (pathname === '/' && url === '/dashboard') {\n    active = true;\n  }\n\n  if (pathname === '/' && url !== '/dashboard') {\n    active = false;\n  }\n\n  if (items.length === 0) {\n    return __jsx(Link, {\n      href: url\n    }, __jsx(\"a\", {\n      className: `left-sidebar-item ${active ? 'active' : ''}`\n    }, icon, __jsx(\"span\", {\n      className: \"title\"\n    }, title), badge && __jsx(\"span\", {\n      className: `badge badge-circle badge-sm ${badge.color}`\n    }, badge.text)));\n  }\n\n  return __jsx(\"button\", {\n    onClick: () => setHidden(!hidden),\n    className: `left-sidebar-item ${active ? 'active' : ''} ${hidden ? 'hidden-sibling' : 'open-sibling'}`\n  }, icon, __jsx(\"span\", {\n    className: \"title\"\n  }, title), badge && __jsx(\"span\", {\n    className: `badge badge-circle badge-sm ${badge.color}`\n  }, badge.text), __jsx(FiChevronRight, {\n    className: \"ml-auto arrow\"\n  }));\n};\n\nexport default Item;","map":null,"metadata":{},"sourceType":"module"}