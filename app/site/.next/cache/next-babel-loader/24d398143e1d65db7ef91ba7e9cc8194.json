{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport default function dashboard() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    value: 0,\n    conversions: {}\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SET_DASHBOARD':\n      var _action = _objectSpread({}, action),\n          key = _action.key,\n          value = _action.value;\n\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, \"\".concat(key), value));\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["E:/outside pro/git new/app/site/src/reducers/dashboard.js"],"names":["dashboard","state","value","conversions","action","type","key"],"mappings":";;;;;;AAAA,eAAe,SAASA,SAAT,GAMb;AAAA,MALAC,KAKA,uEALQ;AACNC,IAAAA,KAAK,EAAE,CADD;AAENC,IAAAA,WAAW,EAAE;AAFP,GAKR;AAAA,MADAC,MACA;;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AAAA,sCACyBD,MADzB;AAAA,UACOE,GADP,WACOA,GADP;AAAA,UACYJ,KADZ,WACYA,KADZ;;AAEE,6CACKD,KADL,qCAEMK,GAFN,GAEcJ,KAFd;;AAIF;AACE,aAAOD,KAAP;AARJ;AAUD","sourcesContent":["export default function dashboard(\r\n  state = {\r\n    value: 0,\r\n    conversions: {}\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case 'SET_DASHBOARD':\r\n      let {key, value} = {...action}\r\n      return {\r\n        ...state,\r\n        [`${key}`]: value\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}