{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\outside pro\\\\git new\\\\app\\\\site\\\\src\\\\components\\\\right-sidebar-1\\\\sidebar.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Switch from 'react-switch';\nimport { getColor } from '../../functions/colors';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\n\nvar Component = function Component() {\n  _s();\n\n  var onColor = \"bg-blue-200\";\n  var onHandleColor = \"bg-blue-500\";\n  var offColor = \"bg-grey-200\";\n  var offHandleColor = 'bg-white';\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      config: state.config\n    };\n  }, shallowEqual),\n      config = _useSelector.config;\n\n  var _config = _objectSpread({}, config),\n      collapsed = _config.collapsed;\n\n  var dispatch = useDispatch();\n  return __jsx(Switch, {\n    onChange: function onChange() {\n      dispatch({\n        type: 'SET_CONFIG',\n        config: {\n          collapsed: !collapsed\n        }\n      });\n    },\n    checked: collapsed,\n    onColor: getColor(onColor),\n    onHandleColor: getColor(onHandleColor),\n    offColor: getColor(offColor),\n    offHandleColor: getColor(offHandleColor),\n    handleDiameter: 24,\n    uncheckedIcon: false,\n    checkedIcon: false,\n    boxShadow: \"0px 1px 5px rgba(0, 0, 0, 0.2)\",\n    activeBoxShadow: \"0px 1px 5px rgba(0, 0, 0, 0.2)\",\n    height: 20,\n    width: 48,\n    className: \"react-switch\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  });\n};\n\n_s(Component, \"TWo5uC0BoIYJJbkoA3Kczf53PFw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Component;\n\nvar Sidebar = function Sidebar() {\n  return __jsx(\"div\", {\n    className: \"flex flex-col p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"uppercase text-sm font-bold tracking-wider mb-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Toggle sidebar\"), __jsx(\"div\", {\n    className: \"flex flex-col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, __jsx(Component, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })));\n};\n\n_c2 = Sidebar;\nexport default Sidebar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Component\");\n$RefreshReg$(_c2, \"Sidebar\");","map":{"version":3,"sources":["E:/outside pro/git new/app/site/src/components/right-sidebar-1/sidebar.js"],"names":["React","Switch","getColor","useSelector","useDispatch","shallowEqual","Component","onColor","onHandleColor","offColor","offHandleColor","state","config","collapsed","dispatch","type","Sidebar"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,QAAR,QAAuB,wBAAvB;AACA,SAAQC,WAAR,EAAqBC,WAArB,EAAkCC,YAAlC,QAAqD,aAArD;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AACtB,MAAIC,OAAO,gBAAX;AACA,MAAIC,aAAa,gBAAjB;AACA,MAAIC,QAAQ,gBAAZ;AACA,MAAIC,cAAc,GAAG,UAArB;;AAJsB,qBAMLP,WAAW,CAC1B,UAAAQ,KAAK;AAAA,WAAK;AACRC,MAAAA,MAAM,EAAED,KAAK,CAACC;AADN,KAAL;AAAA,GADqB,EAI1BP,YAJ0B,CANN;AAAA,MAMfO,MANe,gBAMfA,MANe;;AAAA,kCAYAA,MAZA;AAAA,MAYjBC,SAZiB,WAYjBA,SAZiB;;AAatB,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;AAEA,SACE,MAAC,MAAD;AACE,IAAA,QAAQ,EAAE,oBAAM;AACdU,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE,YADC;AAEPH,QAAAA,MAAM,EAAE;AACNC,UAAAA,SAAS,EAAE,CAACA;AADN;AAFD,OAAD,CAAR;AAMD,KARH;AASE,IAAA,OAAO,EAAEA,SATX;AAUE,IAAA,OAAO,EAAEX,QAAQ,CAACK,OAAD,CAVnB;AAWE,IAAA,aAAa,EAAEL,QAAQ,CAACM,aAAD,CAXzB;AAYE,IAAA,QAAQ,EAAEN,QAAQ,CAACO,QAAD,CAZpB;AAaE,IAAA,cAAc,EAAEP,QAAQ,CAACQ,cAAD,CAb1B;AAcE,IAAA,cAAc,EAAE,EAdlB;AAeE,IAAA,aAAa,EAAE,KAfjB;AAgBE,IAAA,WAAW,EAAE,KAhBf;AAiBE,IAAA,SAAS,EAAC,gCAjBZ;AAkBE,IAAA,eAAe,EAAC,gCAlBlB;AAmBE,IAAA,MAAM,EAAE,EAnBV;AAoBE,IAAA,KAAK,EAAE,EApBT;AAqBE,IAAA,SAAS,EAAC,cArBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAyBD,CAxCD;;GAAMJ,S;UAMaH,W,EAOAC,W;;;KAbbE,S;;AA0CN,IAAMU,OAAO,GAAG,SAAVA,OAAU,GAAM;AAEpB,SACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAIE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF;AAUD,CAZD;;MAAMA,O;AAcN,eAAeA,OAAf","sourcesContent":["import React from 'react'\r\nimport Switch from 'react-switch'\r\nimport {getColor} from '../../functions/colors'\r\nimport {useSelector, useDispatch, shallowEqual} from 'react-redux'\r\n\r\nconst Component = () => {\r\n  let onColor = `bg-blue-200`\r\n  let onHandleColor = `bg-blue-500`\r\n  let offColor = `bg-grey-200`\r\n  let offHandleColor = 'bg-white'\r\n\r\n  const {config} = useSelector(\r\n    state => ({\r\n      config: state.config\r\n    }),\r\n    shallowEqual\r\n  )\r\n  let {collapsed} = {...config}\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <Switch\r\n      onChange={() => {\r\n        dispatch({\r\n          type: 'SET_CONFIG',\r\n          config: {\r\n            collapsed: !collapsed\r\n          }\r\n        })\r\n      }}\r\n      checked={collapsed}\r\n      onColor={getColor(onColor)}\r\n      onHandleColor={getColor(onHandleColor)}\r\n      offColor={getColor(offColor)}\r\n      offHandleColor={getColor(offHandleColor)}\r\n      handleDiameter={24}\r\n      uncheckedIcon={false}\r\n      checkedIcon={false}\r\n      boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.2)\"\r\n      activeBoxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.2)\"\r\n      height={20}\r\n      width={48}\r\n      className=\"react-switch\"\r\n    />\r\n  )\r\n}\r\n\r\nconst Sidebar = () => {\r\n\r\n  return (\r\n    <div className=\"flex flex-col p-4\">\r\n      <div className=\"uppercase text-sm font-bold tracking-wider mb-2\">\r\n        Toggle sidebar\r\n      </div>\r\n      <div className=\"flex flex-col\">\r\n        <Component />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n"]},"metadata":{},"sourceType":"module"}