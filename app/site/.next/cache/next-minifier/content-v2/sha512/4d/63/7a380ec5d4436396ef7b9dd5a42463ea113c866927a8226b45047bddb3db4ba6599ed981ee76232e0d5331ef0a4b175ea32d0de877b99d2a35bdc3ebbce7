{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[9],{JrXF:function(e,r,t){\"use strict\";var n=t(\"q1tI\"),s=t.n(n),a=t(\"Tgqd\"),c=s.a.createElement;r.a=function(e){var r=e.outlined,t=void 0!==r&&r,s=e.raised,i=void 0!==s&&s,u=e.rounded,o=void 0!==u&&u,l=e.borderLeft,f=void 0!==l&&l,d=e.icon,b=void 0===d?null:d,m=e.size,y=void 0===m?\"default\":m,p=e.color,v=e.children,h=Object(n.useState)(!1),g=h[0],O=h[1],j=[];return j.push(p),t&&j.push(\"border border-current\"),i&&j.push(\"shadow\"),o&&j.push(\"rounded-lg\"),g&&j.push(\"hidden\"),f&&j.push(\"border-l-4 border-current\"),\"sm\"===y?j.push(\"p-2\"):j.push(\"p-4\"),j=j.join(\" \"),c(\"div\",{className:\"w-full flex items-center justify-start p-4 \".concat(j)},c(\"div\",{className:\"flex-shrink\"},b),c(\"div\",{className:\"flex-grow\"},v),c(\"div\",{className:\"flex-shrink\"},c(\"button\",{className:\"ml-auto flex items-center justify-center\",onClick:function(){return O(!g)}},c(a.u,{className:\"stroke-current h-4 w-4\"}))))}},Qetd:function(e,r,t){\"use strict\";var n=Object.assign.bind(Object);e.exports=n,e.exports.default=e.exports},Sn5q:function(e,r,t){\"use strict\";var n=t(\"q1tI\"),s=t.n(n),a=e=>e instanceof HTMLElement;const c=\"blur\",i=\"change\",u=\"input\",o=\"onBlur\",l=\"onChange\",f=\"onSubmit\",d=\"onTouched\",b=\"all\",m=\"undefined\",y=\"max\",p=\"min\",v=\"maxLength\",h=\"minLength\",g=\"pattern\",O=\"required\",j=\"validate\";var A=e=>null==e;const w=e=>\"object\"===typeof e;var x=e=>!A(e)&&!Array.isArray(e)&&w(e)&&!(e instanceof Date),N=e=>/^\\w*$/.test(e),k=e=>e.filter(Boolean),R=e=>k(e.replace(/[\"|']/g,\"\").replace(/\\[/g,\".\").replace(/\\]/g,\"\").split(\".\"));function V(e,r,t){let n=-1;const s=N(r)?[r]:R(r),a=s.length,c=a-1;for(;++n<a;){const r=s[n];let a=t;if(n!==c){const t=e[r];a=x(t)||Array.isArray(t)?t:isNaN(+s[n+1])?{}:[]}e[r]=a,e=e[r]}return e}var S=(e,r={})=>{for(const t in e)N(t)?r[t]=e[t]:V(r,t,e[t]);return r},C=e=>void 0===e,F=(e={},r,t)=>{const n=k(r.split(/[,[\\].]+?/)).reduce(((e,r)=>A(e)?e:e[r]),e);return C(n)||n===e?C(e[r])?t:e[r]:n},E=(e,r)=>{a(e)&&e.removeEventListener&&(e.removeEventListener(u,r),e.removeEventListener(i,r),e.removeEventListener(c,r))};const D={isValid:!1,value:\"\"};var L=e=>Array.isArray(e)?e.reduce(((e,r)=>r&&r.ref.checked?{isValid:!0,value:r.ref.value}:e),D):D,q=e=>\"radio\"===e.type,T=e=>\"file\"===e.type,B=e=>\"checkbox\"===e.type,M=e=>\"select-multiple\"===e.type;const P={value:!1,isValid:!1},W={value:!0,isValid:!0};var $=e=>{if(Array.isArray(e)){if(e.length>1){const r=e.filter((e=>e&&e.ref.checked)).map((({ref:{value:e}})=>e));return{value:r,isValid:!!r.length}}const{checked:r,value:t,attributes:n}=e[0].ref;return r?n&&!C(n.value)?C(t)||\"\"===t?W:{value:t,isValid:!0}:W:P}return P};function _(e,r,t,n){const s=e.current[r];if(s){const{ref:{value:e,disabled:r},ref:t,valueAsNumber:c,valueAsDate:i,setValueAs:u}=s;if(r&&n)return;return T(t)?t.files:q(t)?L(s.options).value:M(t)?(a=t.options,[...a].filter((({selected:e})=>e)).map((({value:e})=>e))):B(t)?$(s.options).value:c?+e:i?t.valueAsDate:u?u(e):e}var a;if(t)return F(t.current,r)}function H(e){return!e||e instanceof HTMLElement&&e.nodeType!==Node.DOCUMENT_NODE&&H(e.parentNode)}var J=e=>x(e)&&!Object.keys(e).length,I=e=>\"boolean\"===typeof e;function U(e,r){const t=N(r)?[r]:R(r),n=1==t.length?e:function(e,r){const t=r.slice(0,-1).length;let n=0;for(;n<t;)e=C(e)?n++:e[r[n++]];return e}(e,t),s=t[t.length-1];let a;n&&delete n[s];for(let c=0;c<t.slice(0,-1).length;c++){let r,n=-1;const s=t.slice(0,-(c+1)),i=s.length-1;for(c>0&&(a=e);++n<s.length;){const t=s[n];r=r?r[t]:e[t],i===n&&(x(r)&&J(r)||Array.isArray(r)&&!r.filter((e=>x(e)&&!J(e)||I(e))).length)&&(a?delete a[t]:delete e[t]),a=r}}return e}const z=(e,r)=>e&&e.ref===r;var X=e=>A(e)||!w(e);function Q(e,r){if(X(e)||X(r))return r;for(const n in r){const s=e[n],a=r[n];try{e[n]=x(s)&&x(a)||Array.isArray(s)&&Array.isArray(a)?Q(s,a):a}catch(t){}}return e}function G(e,r,t,n,s){let a=-1;for(;++a<e.length;){for(const n in e[a])Array.isArray(e[a][n])?(!t[a]&&(t[a]={}),t[a][n]=[],G(e[a][n],F(r[a]||{},n,[]),t[a][n],t[a],n)):F(r[a]||{},n)===e[a][n]?V(t[a]||{},n):t[a]=Object.assign(Object.assign({},t[a]),{[n]:!0});n&&!t.length&&delete n[s]}return t}var K=(e,r,t)=>Q(G(e,r,t),G(r,e,t)),Y=e=>\"string\"===typeof e,Z=(e,r,t,n,s)=>{const a={};for(const c in e.current)(C(s)||(Y(s)?c.startsWith(s):Array.isArray(s)&&s.find((e=>c.startsWith(e)))))&&(a[c]=_(e,c,void 0,n));return t?S(a):Q(r,S(a))};function ee(e,r,t){if(X(e)||X(r)||e instanceof Date||r instanceof Date)return e===r;const n=Object.keys(e),s=Object.keys(r);if(n.length!==s.length)return!1;for(const a of n)if(!t||![\"ref\",\"context\"].includes(a)){const n=e[a],s=r[a];if((x(n)||Array.isArray(n))&&(x(s)||Array.isArray(s))?!ee(n,s,t):n!==s)return!1}return!0}var re=e=>e instanceof RegExp,te=e=>x(e)&&!re(e)?e:{value:e,message:\"\"},ne=e=>\"function\"===typeof e,se=e=>Y(e)||Object(n.isValidElement)(e);function ae(e,r,t=\"validate\"){if(se(e)||I(e)&&!e)return{type:t,message:se(e)?e:\"\",ref:r}}var ce=(e,r,t,n,s)=>r?Object.assign(Object.assign({},t[e]),{types:Object.assign(Object.assign({},t[e]&&t[e].types?t[e].types:{}),{[n]:s||!0})}):{},ie=async(e,r,{ref:t,ref:{type:n,value:s},options:a,required:c,maxLength:i,minLength:u,min:o,max:l,pattern:f,validate:d},b)=>{const m=t.name,w={},N=q(t),k=B(t),R=N||k,V=\"\"===s,S=ce.bind(null,m,r,w),C=(e,r,n,s=v,a=h)=>{const c=e?r:n;w[m]=Object.assign({type:e?s:a,message:c,ref:t},S(e?s:a,c))};if(c&&(!N&&!k&&(V||A(s))||I(s)&&!s||k&&!$(a).isValid||N&&!L(a).isValid)){const{value:n,message:s}=se(c)?{value:!!c,message:c}:te(c);if(n&&(w[m]=Object.assign({type:O,message:s,ref:R?((e.current[m].options||[])[0]||{}).ref:t},S(O,s)),!r))return w}if(!A(o)||!A(l)){let e,a;const c=te(l),i=te(o);if(\"number\"===n||!n&&!isNaN(s)){const r=t.valueAsNumber||parseFloat(s);A(c.value)||(e=r>c.value),A(i.value)||(a=r<i.value)}else{const r=t.valueAsDate||new Date(s);Y(c.value)&&(e=r>new Date(c.value)),Y(i.value)&&(a=r<new Date(i.value))}if((e||a)&&(C(!!e,c.message,i.message,y,p),!r))return w}if(Y(s)&&!V&&(i||u)){const e=te(i),t=te(u),n=!A(e.value)&&s.length>e.value,a=!A(t.value)&&s.length<t.value;if((n||a)&&(C(n,e.message,t.message),!r))return w}if(f&&!V){const{value:e,message:n}=te(f);if(re(e)&&!e.test(s)&&(w[m]=Object.assign({type:g,message:n,ref:t},S(g,n)),!r))return w}if(d){const n=_(e,m,b),s=R&&a?a[0].ref:t;if(ne(d)){const e=ae(await d(n),s);if(e&&(w[m]=Object.assign(Object.assign({},e),S(j,e.message)),!r))return w}else if(x(d)){let e={};for(const[t,a]of Object.entries(d)){if(!J(e)&&!r)break;const c=ae(await a(n),s,t);c&&(e=Object.assign(Object.assign({},c),S(t,c.message)),r&&(w[m]=e))}if(!J(e)&&(w[m]=Object.assign({ref:s},e),!r))return w}}return w};const ue=(e,r,t=[])=>{for(const n in r){const s=e+(x(r)?`.${n}`:`[${n}]`);X(r[n])?t.push(s):ue(s,r[n],t)}return t};var oe=(e,r,t,n,s)=>{let a;return t.add(r),J(e)||(a=F(e,r),(x(a)||Array.isArray(a))&&ue(r,a).forEach((e=>t.add(e)))),C(a)?s?n:F(n,r):a},le=({isOnBlur:e,isOnChange:r,isOnTouch:t,isTouched:n,isReValidateOnBlur:s,isReValidateOnChange:a,isBlurEvent:c,isSubmitted:i,isOnAll:u})=>!u&&(!i&&t?!(n||c):(i?s:e)?!c:!(i?a:r)||c),fe=e=>e.substring(0,e.indexOf(\"[\"));const de=(e,r)=>RegExp(`^${r}([|.)\\\\d+`.replace(/\\[/g,\"\\\\[\").replace(/\\]/g,\"\\\\]\")).test(e);var be=(e,r)=>[...e].some((e=>de(r,e)));function me(e,r=!0){let t;if(X(e)||r&&e instanceof File)return e;if(e instanceof Date)return t=new Date(e.getTime()),t;if(e instanceof Set){t=new Set;for(const r of e)t.add(r);return t}if(e instanceof Map){t=new Map;for(const n of e.keys())t.set(n,me(e.get(n),r));return t}t=Array.isArray(e)?[]:{};for(const n in e)t[n]=me(e[n],r);return t}var ye=e=>({isOnSubmit:!e||e===f,isOnBlur:e===o,isOnChange:e===l,isOnAll:e===b,isOnTouch:e===d}),pe=e=>q(e)||B(e);const ve=typeof window===m,he=typeof document!==m&&!ve&&!C(HTMLElement),ge=he?\"Proxy\"in window:typeof Proxy!==m;function Oe({mode:e=f,reValidateMode:r=l,resolver:t,context:s,defaultValues:o={},shouldFocusError:d=!0,shouldUnregister:m=!0,criteriaMode:y}={}){const p=Object(n.useRef)({}),v=Object(n.useRef)({}),h=Object(n.useRef)({}),g=Object(n.useRef)(new Set),O=Object(n.useRef)({}),j=Object(n.useRef)({}),w=Object(n.useRef)({}),R=Object(n.useRef)({}),D=Object(n.useRef)(o),L=Object(n.useRef)({}),P=Object(n.useRef)(!1),W=Object(n.useRef)(!1),$=Object(n.useRef)(),I=Object(n.useRef)({}),Q=Object(n.useRef)({}),G=Object(n.useRef)(s),re=Object(n.useRef)(t),te=Object(n.useRef)(new Set),se=Object(n.useRef)(ye(e)),{isOnSubmit:ae,isOnTouch:ce}=se.current,de=y===b,[Oe,je]=Object(n.useState)({isDirty:!1,dirtyFields:{},isSubmitted:!1,submitCount:0,touched:{},isSubmitting:!1,isSubmitSuccessful:!1,isValid:!ae,errors:{}}),Ae=Object(n.useRef)({isDirty:!ge,dirtyFields:!ge,touched:!ge||ce,isSubmitting:!ge,isValid:!ge}),we=Object(n.useRef)(Oe),xe=Object(n.useRef)(),{isOnBlur:Ne,isOnChange:ke}=Object(n.useRef)(ye(r)).current;G.current=s,re.current=t,we.current=Oe,I.current=m?{}:J(I.current)?me(o,he):I.current;const Re=Object(n.useCallback)(((e={})=>{P.current||(we.current=Object.assign(Object.assign({},we.current),e),je(we.current))}),[]),Ve=Object(n.useCallback)(((e,r,t=!1,n={},s)=>{let a=t||(({errors:e,name:r,error:t,validFields:n,fieldsWithValidation:s})=>{const a=C(t),c=F(e,r);return a&&!!c||!a&&!ee(c,t,!0)||a&&F(s,r)&&!F(n,r)})({errors:we.current.errors,error:r,name:e,validFields:R.current,fieldsWithValidation:w.current});const c=F(we.current.errors,e);r?(U(R.current,e),a=a||!c||!ee(c,r,!0),V(we.current.errors,e,r)):((F(w.current,e)||re.current)&&(V(R.current,e,!0),a=a||c),U(we.current.errors,e)),(a&&!A(t)||!J(n))&&Re(Object.assign(Object.assign({},n),re.current?{isValid:!!s}:{}))}),[]),Se=Object(n.useCallback)(((e,r)=>{const{ref:t,options:n}=p.current[e],s=he&&a(t)&&A(r)?\"\":r;q(t)?(n||[]).forEach((({ref:e})=>e.checked=e.value===s)):T(t)&&!Y(s)?t.files=s:M(t)?[...t.options].forEach((e=>e.selected=s.includes(e.value))):B(t)&&n?n.length>1?n.forEach((({ref:e})=>e.checked=Array.isArray(s)?!!s.find((r=>r===e.value)):s===e.value)):n[0].ref.checked=!!s:t.value=s}),[]),Ce=Object(n.useCallback)(((e,r)=>{if(Ae.current.isDirty){const t=We();return e&&r&&V(t,e,r),!ee(t,J(D.current)?L.current:D.current)}return!1}),[]),Fe=Object(n.useCallback)(((e,r=!0)=>{if(Ae.current.isDirty||Ae.current.dirtyFields){const t=!ee(F(L.current,e),_(p,e,I)),n=F(we.current.dirtyFields,e),s=we.current.isDirty;t?V(we.current.dirtyFields,e,!0):U(we.current.dirtyFields,e);const a={isDirty:Ce(),dirtyFields:we.current.dirtyFields},c=Ae.current.isDirty&&s!==a.isDirty||Ae.current.dirtyFields&&n!==F(we.current.dirtyFields,e);return c&&r&&Re(a),c?a:{}}return{}}),[]),Ee=Object(n.useCallback)((async(e,r)=>{const t=(await ie(p,de,p.current[e],I))[e];return Ve(e,t,r),C(t)}),[Ve,de]),De=Object(n.useCallback)((async e=>{const{errors:r}=await re.current(We(),G.current,de),t=we.current.isValid;if(Array.isArray(e)){const t=e.map((e=>{const t=F(r,e);return t?V(we.current.errors,e,t):U(we.current.errors,e),!t})).every(Boolean);return Re({isValid:J(r)}),t}{const n=F(r,e);return Ve(e,n,t!==J(r),{},J(r)),!n}}),[Ve,de]),Le=Object(n.useCallback)((async e=>{const r=e||Object.keys(p.current);if(re.current)return De(r);if(Array.isArray(r)){!e&&(we.current.errors={});const t=await Promise.all(r.map((async e=>await Ee(e,null))));return Re(),t.every(Boolean)}return await Ee(r,Ae.current.isValid)}),[De,Ee]),qe=Object(n.useCallback)(((e,r,{shouldDirty:t,shouldValidate:n})=>{const s={};V(s,e,r);for(const a of ue(e,r))p.current[a]&&(Se(a,F(s,a)),t&&Fe(a),n&&Le(a))}),[Le,Se,Fe]),Te=Object(n.useCallback)(((e,r,t)=>{!X(r)&&V(I.current,e,r),p.current[e]?(Se(e,r),t.shouldDirty&&Fe(e),t.shouldValidate&&Le(e)):X(r)||(qe(e,r,t),te.current.has(e)&&(v.current[e]=r,Q.current[e]({[e]:r}),(Ae.current.isDirty||Ae.current.dirtyFields)&&t.shouldDirty&&(V(we.current.dirtyFields,e,K(r,F(D.current,e,[]),F(we.current.dirtyFields,e,[]))),Re({isDirty:!ee(Object.assign(Object.assign({},We()),{[e]:r}),D.current)})))),!m&&V(I.current,e,r)}),[Fe,Se,qe]),Be=e=>W.current||g.current.has(e)||g.current.has((e.match(/\\w+/)||[])[0]),Me=(e,r=!0)=>{if(!J(O.current))for(const t in O.current)e&&O.current[t].size&&!O.current[t].has(e)&&!O.current[t].has(fe(e))||(j.current[t](),r=!1);return r};function Pe(e){if(!m){let r=me(e,he);for(const e of te.current)N(e)&&!r[e]&&(r=Object.assign(Object.assign({},r),{[e]:[]}));return r}return e}function We(e){if(Y(e))return _(p,e,I);if(Array.isArray(e)){const r={};for(const t of e)V(r,t,_(p,t,I));return r}return Pe(Z(p,me(I.current,he),m))}$.current=$.current?$.current:async({type:e,target:r})=>{let t=r.name;const n=p.current[t];let s,a;if(n){const i=e===c,u=le(Object.assign({isBlurEvent:i,isReValidateOnChange:ke,isReValidateOnBlur:Ne,isTouched:!!F(we.current.touched,t),isSubmitted:we.current.isSubmitted},se.current));let o=Fe(t,!1),l=!J(o)||Be(t);if(i&&!F(we.current.touched,t)&&Ae.current.touched&&(V(we.current.touched,t,!0),o=Object.assign(Object.assign({},o),{touched:we.current.touched})),!m&&B(r)&&V(I.current,t,_(p,t)),u)return Me(t),(!J(o)||l&&J(o))&&Re(o);if(re.current){const{errors:e}=await re.current(We(),G.current,de),n=we.current.isValid;if(s=F(e,t),B(r)&&!s&&re.current){const r=fe(t),n=F(e,r,{});n.type&&n.message&&(s=n),r&&(n||F(we.current.errors,r))&&(t=r)}a=J(e),n!==a&&(l=!0)}else s=(await ie(p,de,n,I))[t];Me(t),Ve(t,s,l,o,a)}};const $e=Object(n.useCallback)((async(e={})=>{const{errors:r}=await re.current(Object.assign(Object.assign({},We()),e),G.current,de),t=J(r);we.current.isValid!==t&&Re({isValid:t})}),[de]),_e=Object(n.useCallback)(((e,r)=>function(e,r,t,n,s,a){const{ref:c,ref:{name:i}}=t,u=e.current[i];if(!s){const r=_(e,i,n);!C(r)&&V(n.current,i,r)}c.type&&u?q(c)||B(c)?Array.isArray(u.options)&&u.options.length?(k(u.options).forEach(((e={},t)=>{(H(e.ref)&&z(e,e.ref)||a)&&(E(e.ref,r),U(u.options,`[${t}]`))})),u.options&&!k(u.options).length&&delete e.current[i]):delete e.current[i]:(H(c)&&z(u,c)||a)&&(E(c,r),delete e.current[i]):delete e.current[i]}(p,$.current,e,I,m,r)),[m]),He=Object(n.useCallback)((e=>{if(W.current)Re();else{for(const r of g.current)if(r.startsWith(e)){Re();break}Me(e)}}),[]),Je=Object(n.useCallback)(((e,r)=>{e&&(_e(e,r),m&&!k(e.options||[]).length&&(U(L.current,e.ref.name),U(R.current,e.ref.name),U(w.current,e.ref.name),U(we.current.errors,e.ref.name),V(we.current.dirtyFields,e.ref.name,!0),Re({isDirty:Ce()}),Ae.current.isValid&&re.current&&$e(),He(e.ref.name)))}),[$e,_e]);const Ie=Object(n.useCallback)(((e,r,t)=>{const n=t?O.current[t]:g.current;let s=Z(p,me(I.current,he),m,!1,e);if(Y(e)){if(te.current.has(e)){const r=F(h.current,e,[]);s=r.length===k(F(s,e,[])).length&&r.length?s:h.current}return oe(s,e,n,C(F(D.current,e))?r:F(D.current,e),!0)}const a=C(r)?D.current:r;return Array.isArray(e)?e.reduce(((e,r)=>Object.assign(Object.assign({},e),{[r]:oe(s,r,n,a)})),{}):(W.current=C(t),S(!J(s)&&s||a))}),[]);function Ue(e,r={}){const{name:t,type:n,value:s}=e,o=Object.assign({ref:e},r),l=p.current,f=pe(e),d=be(te.current,t),b=r=>he&&(!a(e)||r===e);let m,y=l[t],v=!0;if(y&&(f?Array.isArray(y.options)&&k(y.options).find((e=>s===e.ref.value&&b(e.ref))):b(y.ref)))return void(l[t]=Object.assign(Object.assign({},y),r));y=n?f?Object.assign({options:[...k(y&&y.options||[]),{ref:e}],ref:{type:n,name:t}},r):Object.assign({},o):o,l[t]=y;const h=C(F(I.current,t));if(J(D.current)&&h||(m=F(h?D.current:I.current,t),v=C(m),v||d||Se(t,m)),J(r)||(V(w.current,t,!0),!ae&&Ae.current.isValid&&ie(p,de,y,I).then((e=>{const r=we.current.isValid;J(e)?V(R.current,t,!0):U(R.current,t),r!==J(e)&&Re()}))),!L.current[t]&&(!d||!v)){const e=_(p,t,I);V(L.current,t,v?x(e)?Object.assign({},e):e:m),!d&&U(we.current.dirtyFields,t)}n&&function({ref:e},r,t){a(e)&&t&&(e.addEventListener(r?i:u,t),e.addEventListener(c,t))}(f&&y.options?y.options[y.options.length-1]:y,f||\"select-one\"===e.type,$.current)}const ze=Object(n.useCallback)(((e,r)=>async t=>{t&&t.preventDefault&&(t.preventDefault(),t.persist());let n={},s=Pe(Z(p,me(I.current,he),m,!0));Ae.current.isSubmitting&&Re({isSubmitting:!0});try{if(re.current){const{errors:e,values:r}=await re.current(s,G.current,de);we.current.errors=n=e,s=r}else for(const e of Object.values(p.current))if(e){const{name:r}=e.ref,t=await ie(p,de,e,I);t[r]?(V(n,r,t[r]),U(R.current,r)):F(w.current,r)&&(U(we.current.errors,r),V(R.current,r,!0))}J(n)&&Object.keys(we.current.errors).every((e=>e in p.current))?(Re({errors:{},isSubmitting:!0}),await e(s,t)):(we.current.errors=Object.assign(Object.assign({},we.current.errors),n),r&&await r(we.current.errors,t),d&&((e,r)=>{for(const t in e)if(F(r,t)){const r=e[t];if(r){if(r.ref.focus&&C(r.ref.focus()))break;if(r.options){r.options[0].ref.focus();break}}}})(p.current,we.current.errors))}finally{we.current.isSubmitting=!1,Re({isSubmitted:!0,isSubmitting:!1,isSubmitSuccessful:J(we.current.errors),submitCount:we.current.submitCount+1})}}),[d,de]);Object(n.useEffect)((()=>{t&&Ae.current.isValid&&$e(),xe.current=xe.current||!he?xe.current:function(e,r){const t=new MutationObserver((()=>{for(const t of Object.values(e.current))if(t&&t.options)for(const e of t.options)e&&e.ref&&H(e.ref)&&r(t);else t&&H(t.ref)&&r(t)}));return t.observe(window.document,{childList:!0,subtree:!0}),t}(p,Je)}),[Je,D.current]),Object(n.useEffect)((()=>()=>{P.current=!0,xe.current&&xe.current.disconnect(),Object.values(p.current).forEach((e=>Je(e,!0)))}),[]),!t&&Ae.current.isValid&&(Oe.isValid=ee(R.current,w.current)&&J(we.current.errors));const Xe={trigger:Le,setValue:Object(n.useCallback)((function(e,r,t){Te(e,r,t||{}),Be(e)&&Re(),Me(e)}),[Te,Le]),getValues:Object(n.useCallback)(We,[]),register:Object(n.useCallback)((function(e,r){if(!ve)if(Y(e))Ue({name:e},r);else{if(!x(e)||!(\"name\"in e))return r=>r&&Ue(r,e);Ue(e,r)}}),[D.current]),unregister:Object(n.useCallback)((function(e){for(const r of Array.isArray(e)?e:[e])Je(p.current[r],!0)}),[])},Qe=Object(n.useMemo)((()=>Object.assign({isFormDirty:Ce,updateWatchedValue:He,shouldUnregister:m,updateFormState:Re,removeFieldEventListener:_e,watchInternal:Ie,mode:se.current,reValidateMode:{isReValidateOnBlur:Ne,isReValidateOnChange:ke},validateResolver:t?$e:void 0,fieldsRef:p,resetFieldArrayFunctionRef:Q,useWatchFieldsRef:O,useWatchRenderFunctionsRef:j,fieldArrayDefaultValuesRef:v,validFieldsRef:R,fieldsWithValidationRef:w,fieldArrayNamesRef:te,readFormStateRef:Ae,formStateRef:we,defaultValuesRef:D,shallowFieldsStateRef:I,fieldArrayValuesRef:h},Xe)),[D.current,He,m,_e,Ie]);return Object.assign({watch:function(e,r){return Ie(e,r)},control:Qe,formState:ge?new Proxy(Oe,{get:(e,r)=>{if(r in e)return Ae.current[r]=!0,e[r]}}):Oe,handleSubmit:ze,reset:Object(n.useCallback)(((e,r={})=>{if(he)for(const n of Object.values(p.current))if(n){const{ref:e,options:r}=n,s=pe(e)&&Array.isArray(r)?r[0].ref:e;if(a(s))try{s.closest(\"form\").reset();break}catch(t){}}p.current={},D.current=me(e||D.current,he),e&&Me(\"\"),Object.values(Q.current).forEach((e=>ne(e)&&e())),I.current=m?{}:me(e,he)||{},(({errors:e,isDirty:r,isSubmitted:t,touched:n,isValid:s,submitCount:a,dirtyFields:c})=>{s||(R.current={},w.current={}),L.current={},v.current={},g.current=new Set,W.current=!1,Re({submitCount:a?we.current.submitCount:0,isDirty:!!r&&we.current.isDirty,isSubmitted:!!t&&we.current.isSubmitted,isValid:!!s&&we.current.isValid,dirtyFields:c?we.current.dirtyFields:{},touched:n?we.current.touched:{},errors:e?we.current.errors:{},isSubmitting:!1,isSubmitSuccessful:!1})})(r)}),[]),clearErrors:Object(n.useCallback)((function(e){e&&(Array.isArray(e)?e:[e]).forEach((e=>p.current[e]&&N(e)?delete we.current.errors[e]:U(we.current.errors,e))),Re({errors:e?we.current.errors:{}})}),[]),setError:Object(n.useCallback)((function(e,r){const t=(p.current[e]||{}).ref;V(we.current.errors,e,Object.assign(Object.assign({},r),{ref:t})),Re({isValid:!1}),r.shouldFocus&&t&&t.focus&&t.focus()}),[]),errors:Oe.errors},Xe)}const je=Object(n.createContext)(null);je.displayName=\"RHFContext\";var Ae=t(\"JrXF\"),we=s.a.createElement,xe=function(e){var r=e.items,t=e.onSubmit,n=e.alerts,a=Oe(),c=a.handleSubmit,i=a.errors,u=a.register;return r=r.map((function(e){return e.ref=u(e.error),e})),we(\"form\",{onSubmit:c((function(e){t&&t(e)})),className:\"form flex flex-wrap w-full\"},n&&r.map((function(e,r){if(!i[e.name])return null;var t=i[e.name].message;return 0===t.length&&(t=\"\".concat(e.label,\" is required\")),we(\"div\",{className:\"flex flex-col w-full\"},i[e.name]&&we(\"div\",{className:\"mb-2\",key:r},we(Ae.a,{color:\"bg-transparent border-red-500 text-red-500\",borderLeft:!0,raised:!0},t)))})),we(\"div\",{className:\"w-full\"},r.map((function(e,r){return\"checkbox\"===e.type?we(\"div\",{className:\"form-element\"},e.label&&we(\"div\",{className:\"form-label\"},e.label),we(\"div\",{className:\"flex items-center justify-start space-x-2\"},e.options.map((function(r,t){return we(\"label\",{className:\"flex items-center justify-start space-x-2\"},we(\"input\",{ref:e.ref,type:\"checkbox\",value:r.value,name:e.name,className:\"form-checkbox h-4 w-4 \".concat(i[e.name]?\"text-red-500\":\"\")}),we(\"span\",{className:\"\".concat(i[e.name]?\"text-red-500\":\"\")},r.label))})))):\"radio\"===e.type?we(\"div\",{className:\"form-element\"},e.label&&we(\"div\",{className:\"form-label\"},e.label),we(\"div\",{className:\"flex items-center justify-start space-x-2\"},e.options.map((function(r,t){return we(\"label\",{className:\"flex items-center justify-start space-x-2\"},we(\"input\",{type:\"radio\",value:r.value,name:e.name,ref:u({required:!0}),className:\"form-radio h-4 w-4 \".concat(i[e.name]?\"text-red-500\":\"\")}),we(\"span\",{className:\"\".concat(i[e.name]?\"text-red-500\":\"\")},r.label))})))):\"select\"===e.type?we(\"div\",{className:\"form-element\"},e.label&&we(\"div\",{className:\"form-label\"},e.label),we(\"select\",{ref:e.ref,name:e.name,className:\"form-select \".concat(i[e.name]?\"border border-red-500\":\"\")},e.options.map((function(e,r){return we(\"option\",{key:r,value:e.value},e.label)}))),!n&&i[e.name]&&we(\"div\",{className:\"form-error\"},i[e.name].message)):\"textarea\"===e.type?we(s.a.Fragment,null,we(\"div\",{className:\"form-element\"},e.label&&we(\"div\",{className:\"form-label\"},e.label),we(\"textarea\",{ref:e.ref,name:e.name,className:\"form-textarea \".concat(i[e.name]?\"border border-red-500\":\"\"),rows:\"3\",placeholder:e.placeholder}),!n&&i[e.name]&&we(\"div\",{className:\"form-error\"},i[e.name].message))):we(s.a.Fragment,null,we(\"div\",{className:\"form-element\"},e.label&&we(\"div\",{className:\"form-label\"},e.label),we(\"input\",{ref:e.ref,name:e.name,type:e.type,className:\"form-input \".concat(i[e.name]?\"border-red-500\":\"\"),placeholder:e.placeholder}),!n&&i[e.name]&&we(\"div\",{className:\"form-error\"},i[e.name].message)))}))),we(\"input\",{type:\"submit\",className:\"btn btn-default bg-blue-500 hover:bg-blue-600 text-white btn-rounded\"}))},Ne=t(\"vDqi\"),ke=t.n(Ne),Re=s.a.createElement;r.a=function(e){var r=e.message,t=void 0===r?null:r,a=Object(n.useState)(null),c=a[0],i=a[1];ke.a.post(\"http://localhost:8000/site/submit/contactus/details\",c).then((function(e){var r=e.data;r&&1==r.status&&console.log(\"res-----dddddddddddddddddddddddddddddddd-----\\x3e>>\",r.response)})).catch((function(e){if(e)throw e}));return Re(s.a.Fragment,null,Re(\"div\",{className:\"flex flex-col\"},c&&t&&Re(\"div\",{className:\"w-full mb-4\"},Re(Ae.a,{color:\"bg-transparent border-green-500 text-green-500\",borderLeft:!0,raised:!0},t)),Re(xe,{items:[{label:\"Name*\",error:{required:\"Please enter your name\"},name:\"name\",type:\"text\",placeholder:\"Name\"},{label:\"Email*\",error:{required:\"Please enter a valid email\"},name:\"email\",type:\"email\",placeholder:\"Email\"},{label:\"Phone*\",error:{required:\"Please enter a job\"},name:\"phone\",type:\"number\",placeholder:\"Phone\"},{label:\"Subject*\",error:{required:\"Please enter a subject\"},name:\"subject\",type:\"text\",placeholder:\"Subject\"},{label:\"Reason*\",error:{required:\"Please enter reason\"},name:\"reason\",type:\"textarea\",placeholder:\"Reason of Appoinment\"}],onSubmit:i})))}}}]);","map":{"version":3,"sources":["static/chunks/0b25923352b957ac193528162257c36372971e35.0568e65e710514a3f707.js"],"names":["window","push","JrXF","module","__webpack_exports__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_icons_fi__WEBPACK_IMPORTED_MODULE_1__","__jsx","a","createElement","_ref","_ref$outlined","outlined","_ref$raised","raised","_ref$rounded","rounded","_ref$borderLeft","borderLeft","_ref$icon","icon","_ref$size","size","color","children","_useState","Object","hidden","setHidden","css","join","className","concat","onClick","Qetd","exports","assign","bind","default","Sn5q","react","react_default","isHTMLElement","value","HTMLElement","EVENTS","VALIDATION_MODE","UNDEFINED","INPUT_VALIDATION_RULES","isNullOrUndefined","isObjectType","isObject","Array","isArray","Date","isKey","test","compact","filter","Boolean","stringToPath","input","replace","split","set","object","path","index","tempPath","length","lastIndex","key","newValue","objValue","isNaN","transformToNestObject","data","isUndefined","val","undefined","get","obj","defaultValue","result","reduce","removeAllEventListeners","ref","validateWithStateUpdate","removeEventListener","defaultReturn","isValid","getRadioValue","options","previous","option","checked","isRadioInput","element","type","isFileInput","isCheckBoxInput","isMultipleSelect","defaultResult","validResult","getCheckboxValue","values","map","attributes","getFieldValue","fieldsRef","name","shallowFieldsStateRef","excludeDisabled","field","current","disabled","valueAsNumber","valueAsDate","setValueAs","files","selected","isDetached","nodeType","Node","DOCUMENT_NODE","parentNode","isEmptyObject","keys","isBoolean","unset","updatePath","childObject","slice","baseGet","previousObjRef","k","objectRef","currentPaths","currentPathsLength","item","isSameRef","fieldValue","isPrimitive","deepMerge","target","source","targetValue","sourceValue","_a","setDirtyFields","defaultValues","dirtyFields","parentName","[object Object]","setFieldArrayDirtyFields","isString","getFieldsValues","shallowFieldsState","shouldUnregister","search","output","startsWith","find","deepEqual","object1","object2","isErrorObject","keys1","keys2","includes","val1","val2","isRegex","RegExp","getValueAndMessage","validationData","message","isFunction","isMessage","getValidateError","appendErrors","validateAllFieldCriteria","errors","types","validateField","async","required","maxLength","minLength","min","max","pattern","validate","error","isRadio","isCheckBox","isRadioOrCheckbox","isEmpty","appendErrorsCurry","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","exceedMin","maxOutput","minOutput","valueNumber","parseFloat","valueDate","maxLengthOutput","minLengthOutput","patternValue","validateRef","validateError","validationResult","validateFunction","entries","getPath","rootPath","paths","property","rootName","assignWatchFields","fieldValues","fieldName","watchFields","inputValue","isSingleField","add","forEach","skipValidation","isOnBlur","isOnChange","isOnTouch","isTouched","isReValidateOnBlur","isReValidateOnChange","isBlurEvent","isSubmitted","isOnAll","getFieldArrayParentName","substring","indexOf","isMatchFieldArrayName","searchName","isNameInFieldArray","names","some","cloneObject","isWeb","copy","File","getTime","Set","Map","modeChecker","mode","isOnSubmit","isRadioOrCheckboxFunction","isWindowUndefined","document","isProxyEnabled","Proxy","useForm","reValidateMode","resolver","context","shouldFocusError","criteriaMode","fieldArrayDefaultValuesRef","fieldArrayValuesRef","watchFieldsRef","useWatchFieldsRef","useWatchRenderFunctionsRef","fieldsWithValidationRef","validFieldsRef","defaultValuesRef","defaultValuesAtRenderRef","isUnMount","isWatchAllRef","handleChangeRef","resetFieldArrayFunctionRef","contextRef","resolverRef","fieldArrayNamesRef","modeRef","isValidateAllFieldCriteria","formState","setFormState","isDirty","submitCount","touched","isSubmitting","isSubmitSuccessful","readFormStateRef","formStateRef","observerRef","updateFormState","state","shouldRenderBaseOnError","shouldRender","shouldReRender","validFields","fieldsWithValidation","previousError","isErrorStateChanged","setFieldValue","rawValue","radioRef","selectRef","checkboxRef","isFormDirty","formValues","getValues","updateAndGetDirtyState","isFieldDirty","isDirtyFieldExist","previousIsDirty","isChanged","executeValidation","skipReRender","executeSchemaOrResolverValidation","previousFormIsValid","isInputsValid","every","trigger","fields","Promise","all","setInternalValues","shouldDirty","shouldValidate","setInternalValue","config","has","isFieldWatched","match","renderWatchedInputs","found","setFieldArrayDefaultValues","payload","shouldSkipValidation","parentNodeName","currentError","validateResolver","removeFieldEventListener","forceDelete","handleChange","fieldRef","findRemovedFieldAndRemoveListener","updateWatchedValue","watchField","removeFieldEventListenerAndRef","watchInternal","fieldNames","watchId","fieldArrayValue","combinedDefaultValues","registerFieldRef","fieldRefAndValidationOptions","isFieldArray","compareRef","currentRef","isEmptyDefaultValue","isEmptyUnmountFields","then","shouldAttachChangeEvent","addEventListener","attachEventListeners","handleSubmit","onValid","onInvalid","e","preventDefault","persist","fieldErrors","fieldError","focus","focusOnErrorField","observer","MutationObserver","observe","childList","subtree","onDomRemove","disconnect","commonProps","setValue","register","refOrRegisterOptions","unregister","control","watch","prop","reset","omitResetState","inputRef","closest","resetFieldArray","resetRefs","clearErrors","inputName","setError","shouldFocus","FormContext","displayName","components_alerts","validation","items","onSubmit","alerts","_useForm","i","msg","label","j","Fragment","rows","placeholder","axios","axios_default","contact_us_jsx","_ref$message","post","response","res","status","console","log"],"mappings":"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"},"name":"static/chunks/0b25923352b957ac193528162257c36372971e35.0568e65e710514a3f707.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[9],{\n\n/***/ \"JrXF\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"q1tI\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_icons_fi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"Tgqd\");\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;\n\n\n\nvar Alert = function Alert(_ref) {\n  var _ref$outlined = _ref.outlined,\n      outlined = _ref$outlined === void 0 ? false : _ref$outlined,\n      _ref$raised = _ref.raised,\n      raised = _ref$raised === void 0 ? false : _ref$raised,\n      _ref$rounded = _ref.rounded,\n      rounded = _ref$rounded === void 0 ? false : _ref$rounded,\n      _ref$borderLeft = _ref.borderLeft,\n      borderLeft = _ref$borderLeft === void 0 ? false : _ref$borderLeft,\n      _ref$icon = _ref.icon,\n      icon = _ref$icon === void 0 ? null : _ref$icon,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 'default' : _ref$size,\n      color = _ref.color,\n      children = _ref.children;\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(false),\n      hidden = _useState[0],\n      setHidden = _useState[1];\n\n  var css = [];\n  css.push(color);\n  if (outlined) css.push(\"border border-current\");\n  if (raised) css.push('shadow');\n  if (rounded) css.push('rounded-lg');\n  if (hidden) css.push('hidden');\n  if (borderLeft) css.push('border-l-4 border-current');\n\n  if (size === 'sm') {\n    css.push('p-2');\n  } else {\n    css.push('p-4');\n  }\n\n  css = css.join(' ');\n  return __jsx(\"div\", {\n    className: \"w-full flex items-center justify-start p-4 \".concat(css)\n  }, __jsx(\"div\", {\n    className: \"flex-shrink\"\n  }, icon), __jsx(\"div\", {\n    className: \"flex-grow\"\n  }, children), __jsx(\"div\", {\n    className: \"flex-shrink\"\n  }, __jsx(\"button\", {\n    className: \"ml-auto flex items-center justify-center\",\n    onClick: function onClick() {\n      return setHidden(!hidden);\n    }\n  }, __jsx(react_icons_fi__WEBPACK_IMPORTED_MODULE_1__[/* FiX */ \"u\"], {\n    className: \"stroke-current h-4 w-4\"\n  }))));\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Alert);\n\n/***/ }),\n\n/***/ \"Qetd\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar assign=Object.assign.bind(Object);module.exports=assign;module.exports.default=module.exports;\n//# sourceMappingURL=object-assign.js.map\n\n/***/ }),\n\n/***/ \"Sn5q\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(\"q1tI\");\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// CONCATENATED MODULE: ./node_modules/react-hook-form/dist/index.esm.js\n\n\nvar isHTMLElement = (value) => value instanceof HTMLElement;\n\nconst EVENTS = {\r\n    BLUR: 'blur',\r\n    CHANGE: 'change',\r\n    INPUT: 'input',\r\n};\r\nconst VALIDATION_MODE = {\r\n    onBlur: 'onBlur',\r\n    onChange: 'onChange',\r\n    onSubmit: 'onSubmit',\r\n    onTouched: 'onTouched',\r\n    all: 'all',\r\n};\r\nconst SELECT = 'select';\r\nconst UNDEFINED = 'undefined';\r\nconst INPUT_VALIDATION_RULES = {\r\n    max: 'max',\r\n    min: 'min',\r\n    maxLength: 'maxLength',\r\n    minLength: 'minLength',\r\n    pattern: 'pattern',\r\n    required: 'required',\r\n    validate: 'validate',\r\n};\n\nfunction attachEventListeners({ ref }, shouldAttachChangeEvent, handleChange) {\r\n    if (isHTMLElement(ref) && handleChange) {\r\n        ref.addEventListener(shouldAttachChangeEvent ? EVENTS.CHANGE : EVENTS.INPUT, handleChange);\r\n        ref.addEventListener(EVENTS.BLUR, handleChange);\r\n    }\r\n}\n\nvar isNullOrUndefined = (value) => value == null;\n\nconst isObjectType = (value) => typeof value === 'object';\r\nvar isObject = (value) => !isNullOrUndefined(value) &&\r\n    !Array.isArray(value) &&\r\n    isObjectType(value) &&\r\n    !(value instanceof Date);\n\nvar isKey = (value) => /^\\w*$/.test(value);\n\nvar compact = (value) => value.filter(Boolean);\n\nvar stringToPath = (input) => compact(input\r\n    .replace(/[\"|']/g, '')\r\n    .replace(/\\[/g, '.')\r\n    .replace(/\\]/g, '')\r\n    .split('.'));\n\nfunction set(object, path, value) {\r\n    let index = -1;\r\n    const tempPath = isKey(path) ? [path] : stringToPath(path);\r\n    const length = tempPath.length;\r\n    const lastIndex = length - 1;\r\n    while (++index < length) {\r\n        const key = tempPath[index];\r\n        let newValue = value;\r\n        if (index !== lastIndex) {\r\n            const objValue = object[key];\r\n            newValue =\r\n                isObject(objValue) || Array.isArray(objValue)\r\n                    ? objValue\r\n                    : !isNaN(+tempPath[index + 1])\r\n                        ? []\r\n                        : {};\r\n        }\r\n        object[key] = newValue;\r\n        object = object[key];\r\n    }\r\n    return object;\r\n}\n\nvar transformToNestObject = (data, value = {}) => {\r\n    for (const key in data) {\r\n        !isKey(key) ? set(value, key, data[key]) : (value[key] = data[key]);\r\n    }\r\n    return value;\r\n};\n\nvar isUndefined = (val) => val === undefined;\n\nvar get = (obj = {}, path, defaultValue) => {\r\n    const result = compact(path.split(/[,[\\].]+?/)).reduce((result, key) => (isNullOrUndefined(result) ? result : result[key]), obj);\r\n    return isUndefined(result) || result === obj\r\n        ? isUndefined(obj[path])\r\n            ? defaultValue\r\n            : obj[path]\r\n        : result;\r\n};\n\nvar focusOnErrorField = (fields, fieldErrors) => {\r\n    for (const key in fields) {\r\n        if (get(fieldErrors, key)) {\r\n            const field = fields[key];\r\n            if (field) {\r\n                if (field.ref.focus && isUndefined(field.ref.focus())) {\r\n                    break;\r\n                }\r\n                else if (field.options) {\r\n                    field.options[0].ref.focus();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\n\nvar removeAllEventListeners = (ref, validateWithStateUpdate) => {\r\n    if (isHTMLElement(ref) && ref.removeEventListener) {\r\n        ref.removeEventListener(EVENTS.INPUT, validateWithStateUpdate);\r\n        ref.removeEventListener(EVENTS.CHANGE, validateWithStateUpdate);\r\n        ref.removeEventListener(EVENTS.BLUR, validateWithStateUpdate);\r\n    }\r\n};\n\nconst defaultReturn = {\r\n    isValid: false,\r\n    value: '',\r\n};\r\nvar getRadioValue = (options) => Array.isArray(options)\r\n    ? options.reduce((previous, option) => option && option.ref.checked\r\n        ? {\r\n            isValid: true,\r\n            value: option.ref.value,\r\n        }\r\n        : previous, defaultReturn)\r\n    : defaultReturn;\n\nvar getMultipleSelectValue = (options) => [...options]\r\n    .filter(({ selected }) => selected)\r\n    .map(({ value }) => value);\n\nvar isRadioInput = (element) => element.type === 'radio';\n\nvar isFileInput = (element) => element.type === 'file';\n\nvar isCheckBoxInput = (element) => element.type === 'checkbox';\n\nvar isMultipleSelect = (element) => element.type === `${SELECT}-multiple`;\n\nconst defaultResult = {\r\n    value: false,\r\n    isValid: false,\r\n};\r\nconst validResult = { value: true, isValid: true };\r\nvar getCheckboxValue = (options) => {\r\n    if (Array.isArray(options)) {\r\n        if (options.length > 1) {\r\n            const values = options\r\n                .filter((option) => option && option.ref.checked)\r\n                .map(({ ref: { value } }) => value);\r\n            return { value: values, isValid: !!values.length };\r\n        }\r\n        const { checked, value, attributes } = options[0].ref;\r\n        return checked\r\n            ? attributes && !isUndefined(attributes.value)\r\n                ? isUndefined(value) || value === ''\r\n                    ? validResult\r\n                    : { value: value, isValid: true }\r\n                : validResult\r\n            : defaultResult;\r\n    }\r\n    return defaultResult;\r\n};\n\nfunction getFieldValue(fieldsRef, name, shallowFieldsStateRef, excludeDisabled) {\r\n    const field = fieldsRef.current[name];\r\n    if (field) {\r\n        const { ref: { value, disabled }, ref, valueAsNumber, valueAsDate, setValueAs, } = field;\r\n        if (disabled && excludeDisabled) {\r\n            return;\r\n        }\r\n        if (isFileInput(ref)) {\r\n            return ref.files;\r\n        }\r\n        if (isRadioInput(ref)) {\r\n            return getRadioValue(field.options).value;\r\n        }\r\n        if (isMultipleSelect(ref)) {\r\n            return getMultipleSelectValue(ref.options);\r\n        }\r\n        if (isCheckBoxInput(ref)) {\r\n            return getCheckboxValue(field.options).value;\r\n        }\r\n        return valueAsNumber\r\n            ? +value\r\n            : valueAsDate\r\n                ? ref.valueAsDate\r\n                : setValueAs\r\n                    ? setValueAs(value)\r\n                    : value;\r\n    }\r\n    if (shallowFieldsStateRef) {\r\n        return get(shallowFieldsStateRef.current, name);\r\n    }\r\n}\n\nfunction isDetached(element) {\r\n    if (!element) {\r\n        return true;\r\n    }\r\n    if (!(element instanceof HTMLElement) ||\r\n        element.nodeType === Node.DOCUMENT_NODE) {\r\n        return false;\r\n    }\r\n    return isDetached(element.parentNode);\r\n}\n\nvar isEmptyObject = (value) => isObject(value) && !Object.keys(value).length;\n\nvar isBoolean = (value) => typeof value === 'boolean';\n\nfunction baseGet(object, updatePath) {\r\n    const path = updatePath.slice(0, -1);\r\n    const length = path.length;\r\n    let index = 0;\r\n    while (index < length) {\r\n        object = isUndefined(object) ? index++ : object[updatePath[index++]];\r\n    }\r\n    return object;\r\n}\r\nfunction unset(object, path) {\r\n    const updatePath = isKey(path) ? [path] : stringToPath(path);\r\n    const childObject = updatePath.length == 1 ? object : baseGet(object, updatePath);\r\n    const key = updatePath[updatePath.length - 1];\r\n    let previousObjRef = undefined;\r\n    if (childObject) {\r\n        delete childObject[key];\r\n    }\r\n    for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\r\n        let index = -1;\r\n        let objectRef = undefined;\r\n        const currentPaths = updatePath.slice(0, -(k + 1));\r\n        const currentPathsLength = currentPaths.length - 1;\r\n        if (k > 0) {\r\n            previousObjRef = object;\r\n        }\r\n        while (++index < currentPaths.length) {\r\n            const item = currentPaths[index];\r\n            objectRef = objectRef ? objectRef[item] : object[item];\r\n            if (currentPathsLength === index &&\r\n                ((isObject(objectRef) && isEmptyObject(objectRef)) ||\r\n                    (Array.isArray(objectRef) &&\r\n                        !objectRef.filter((data) => (isObject(data) && !isEmptyObject(data)) || isBoolean(data)).length))) {\r\n                previousObjRef ? delete previousObjRef[item] : delete object[item];\r\n            }\r\n            previousObjRef = objectRef;\r\n        }\r\n    }\r\n    return object;\r\n}\n\nconst isSameRef = (fieldValue, ref) => fieldValue && fieldValue.ref === ref;\r\nfunction findRemovedFieldAndRemoveListener(fieldsRef, handleChange, field, shallowFieldsStateRef, shouldUnregister, forceDelete) {\r\n    const { ref, ref: { name }, } = field;\r\n    const fieldRef = fieldsRef.current[name];\r\n    if (!shouldUnregister) {\r\n        const value = getFieldValue(fieldsRef, name, shallowFieldsStateRef);\r\n        !isUndefined(value) && set(shallowFieldsStateRef.current, name, value);\r\n    }\r\n    if (!ref.type || !fieldRef) {\r\n        delete fieldsRef.current[name];\r\n        return;\r\n    }\r\n    if (isRadioInput(ref) || isCheckBoxInput(ref)) {\r\n        if (Array.isArray(fieldRef.options) && fieldRef.options.length) {\r\n            compact(fieldRef.options).forEach((option = {}, index) => {\r\n                if ((isDetached(option.ref) && isSameRef(option, option.ref)) ||\r\n                    forceDelete) {\r\n                    removeAllEventListeners(option.ref, handleChange);\r\n                    unset(fieldRef.options, `[${index}]`);\r\n                }\r\n            });\r\n            if (fieldRef.options && !compact(fieldRef.options).length) {\r\n                delete fieldsRef.current[name];\r\n            }\r\n        }\r\n        else {\r\n            delete fieldsRef.current[name];\r\n        }\r\n    }\r\n    else if ((isDetached(ref) && isSameRef(fieldRef, ref)) || forceDelete) {\r\n        removeAllEventListeners(ref, handleChange);\r\n        delete fieldsRef.current[name];\r\n    }\r\n}\n\nvar isPrimitive = (value) => isNullOrUndefined(value) || !isObjectType(value);\n\nfunction deepMerge(target, source) {\r\n    if (isPrimitive(target) || isPrimitive(source)) {\r\n        return source;\r\n    }\r\n    for (const key in source) {\r\n        const targetValue = target[key];\r\n        const sourceValue = source[key];\r\n        try {\r\n            target[key] =\r\n                (isObject(targetValue) && isObject(sourceValue)) ||\r\n                    (Array.isArray(targetValue) && Array.isArray(sourceValue))\r\n                    ? deepMerge(targetValue, sourceValue)\r\n                    : sourceValue;\r\n        }\r\n        catch (_a) { }\r\n    }\r\n    return target;\r\n}\n\nfunction setDirtyFields(values, defaultValues, dirtyFields, parentNode, parentName) {\r\n    let index = -1;\r\n    while (++index < values.length) {\r\n        for (const key in values[index]) {\r\n            if (Array.isArray(values[index][key])) {\r\n                !dirtyFields[index] && (dirtyFields[index] = {});\r\n                dirtyFields[index][key] = [];\r\n                setDirtyFields(values[index][key], get(defaultValues[index] || {}, key, []), dirtyFields[index][key], dirtyFields[index], key);\r\n            }\r\n            else {\r\n                get(defaultValues[index] || {}, key) === values[index][key]\r\n                    ? set(dirtyFields[index] || {}, key)\r\n                    : (dirtyFields[index] = Object.assign(Object.assign({}, dirtyFields[index]), { [key]: true }));\r\n            }\r\n        }\r\n        parentNode &&\r\n            !dirtyFields.length &&\r\n            delete parentNode[parentName];\r\n    }\r\n    return dirtyFields;\r\n}\r\nvar setFieldArrayDirtyFields = (values, defaultValues, dirtyFields) => deepMerge(setDirtyFields(values, defaultValues, dirtyFields), setDirtyFields(defaultValues, values, dirtyFields));\n\nvar isString = (value) => typeof value === 'string';\n\nvar getFieldsValues = (fieldsRef, shallowFieldsState, shouldUnregister, excludeDisabled, search) => {\r\n    const output = {};\r\n    for (const name in fieldsRef.current) {\r\n        if (isUndefined(search) ||\r\n            (isString(search)\r\n                ? name.startsWith(search)\r\n                : Array.isArray(search) && search.find((data) => name.startsWith(data)))) {\r\n            output[name] = getFieldValue(fieldsRef, name, undefined, excludeDisabled);\r\n        }\r\n    }\r\n    return shouldUnregister\r\n        ? transformToNestObject(output)\r\n        : deepMerge(shallowFieldsState, transformToNestObject(output));\r\n};\n\nfunction deepEqual(object1, object2, isErrorObject) {\r\n    if (isPrimitive(object1) ||\r\n        isPrimitive(object2) ||\r\n        object1 instanceof Date ||\r\n        object2 instanceof Date) {\r\n        return object1 === object2;\r\n    }\r\n    const keys1 = Object.keys(object1);\r\n    const keys2 = Object.keys(object2);\r\n    if (keys1.length !== keys2.length) {\r\n        return false;\r\n    }\r\n    for (const key of keys1) {\r\n        if (!(isErrorObject && ['ref', 'context'].includes(key))) {\r\n            const val1 = object1[key];\r\n            const val2 = object2[key];\r\n            if ((isObject(val1) || Array.isArray(val1)) &&\r\n                (isObject(val2) || Array.isArray(val2))\r\n                ? !deepEqual(val1, val2, isErrorObject)\r\n                : val1 !== val2) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\n\nvar isErrorStateChanged = ({ errors, name, error, validFields, fieldsWithValidation, }) => {\r\n    const isValid = isUndefined(error);\r\n    const previousError = get(errors, name);\r\n    return ((isValid && !!previousError) ||\r\n        (!isValid && !deepEqual(previousError, error, true)) ||\r\n        (isValid && get(fieldsWithValidation, name) && !get(validFields, name)));\r\n};\n\nvar isRegex = (value) => value instanceof RegExp;\n\nvar getValueAndMessage = (validationData) => isObject(validationData) && !isRegex(validationData)\r\n    ? validationData\r\n    : {\r\n        value: validationData,\r\n        message: '',\r\n    };\n\nvar isFunction = (value) => typeof value === 'function';\n\nvar isMessage = (value) => isString(value) || Object(react[\"isValidElement\"])(value);\n\nfunction getValidateError(result, ref, type = 'validate') {\r\n    if (isMessage(result) || (isBoolean(result) && !result)) {\r\n        return {\r\n            type,\r\n            message: isMessage(result) ? result : '',\r\n            ref,\r\n        };\r\n    }\r\n}\n\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria\r\n    ? Object.assign(Object.assign({}, errors[name]), { types: Object.assign(Object.assign({}, (errors[name] && errors[name].types ? errors[name].types : {})), { [type]: message || true }) }) : {};\n\nvar validateField = async (fieldsRef, validateAllFieldCriteria, { ref, ref: { type, value }, options, required, maxLength, minLength, min, max, pattern, validate, }, shallowFieldsStateRef) => {\r\n    const name = ref.name;\r\n    const error = {};\r\n    const isRadio = isRadioInput(ref);\r\n    const isCheckBox = isCheckBoxInput(ref);\r\n    const isRadioOrCheckbox = isRadio || isCheckBox;\r\n    const isEmpty = value === '';\r\n    const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\r\n    const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {\r\n        const message = exceedMax ? maxLengthMessage : minLengthMessage;\r\n        error[name] = Object.assign({ type: exceedMax ? maxType : minType, message,\r\n            ref }, (exceedMax\r\n            ? appendErrorsCurry(maxType, message)\r\n            : appendErrorsCurry(minType, message)));\r\n    };\r\n    if (required &&\r\n        ((!isRadio && !isCheckBox && (isEmpty || isNullOrUndefined(value))) ||\r\n            (isBoolean(value) && !value) ||\r\n            (isCheckBox && !getCheckboxValue(options).isValid) ||\r\n            (isRadio && !getRadioValue(options).isValid))) {\r\n        const { value, message } = isMessage(required)\r\n            ? { value: !!required, message: required }\r\n            : getValueAndMessage(required);\r\n        if (value) {\r\n            error[name] = Object.assign({ type: INPUT_VALIDATION_RULES.required, message, ref: isRadioOrCheckbox\r\n                    ? ((fieldsRef.current[name].options || [])[0] || {}).ref\r\n                    : ref }, appendErrorsCurry(INPUT_VALIDATION_RULES.required, message));\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (!isNullOrUndefined(min) || !isNullOrUndefined(max)) {\r\n        let exceedMax;\r\n        let exceedMin;\r\n        const maxOutput = getValueAndMessage(max);\r\n        const minOutput = getValueAndMessage(min);\r\n        if (type === 'number' || (!type && !isNaN(value))) {\r\n            const valueNumber = ref.valueAsNumber || parseFloat(value);\r\n            if (!isNullOrUndefined(maxOutput.value)) {\r\n                exceedMax = valueNumber > maxOutput.value;\r\n            }\r\n            if (!isNullOrUndefined(minOutput.value)) {\r\n                exceedMin = valueNumber < minOutput.value;\r\n            }\r\n        }\r\n        else {\r\n            const valueDate = ref.valueAsDate || new Date(value);\r\n            if (isString(maxOutput.value)) {\r\n                exceedMax = valueDate > new Date(maxOutput.value);\r\n            }\r\n            if (isString(minOutput.value)) {\r\n                exceedMin = valueDate < new Date(minOutput.value);\r\n            }\r\n        }\r\n        if (exceedMax || exceedMin) {\r\n            getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (isString(value) && !isEmpty && (maxLength || minLength)) {\r\n        const maxLengthOutput = getValueAndMessage(maxLength);\r\n        const minLengthOutput = getValueAndMessage(minLength);\r\n        const exceedMax = !isNullOrUndefined(maxLengthOutput.value) &&\r\n            value.length > maxLengthOutput.value;\r\n        const exceedMin = !isNullOrUndefined(minLengthOutput.value) &&\r\n            value.length < minLengthOutput.value;\r\n        if (exceedMax || exceedMin) {\r\n            getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (pattern && !isEmpty) {\r\n        const { value: patternValue, message } = getValueAndMessage(pattern);\r\n        if (isRegex(patternValue) && !patternValue.test(value)) {\r\n            error[name] = Object.assign({ type: INPUT_VALIDATION_RULES.pattern, message,\r\n                ref }, appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message));\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (validate) {\r\n        const fieldValue = getFieldValue(fieldsRef, name, shallowFieldsStateRef);\r\n        const validateRef = isRadioOrCheckbox && options ? options[0].ref : ref;\r\n        if (isFunction(validate)) {\r\n            const result = await validate(fieldValue);\r\n            const validateError = getValidateError(result, validateRef);\r\n            if (validateError) {\r\n                error[name] = Object.assign(Object.assign({}, validateError), appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message));\r\n                if (!validateAllFieldCriteria) {\r\n                    return error;\r\n                }\r\n            }\r\n        }\r\n        else if (isObject(validate)) {\r\n            let validationResult = {};\r\n            for (const [key, validateFunction] of Object.entries(validate)) {\r\n                if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\r\n                    break;\r\n                }\r\n                const validateResult = await validateFunction(fieldValue);\r\n                const validateError = getValidateError(validateResult, validateRef, key);\r\n                if (validateError) {\r\n                    validationResult = Object.assign(Object.assign({}, validateError), appendErrorsCurry(key, validateError.message));\r\n                    if (validateAllFieldCriteria) {\r\n                        error[name] = validationResult;\r\n                    }\r\n                }\r\n            }\r\n            if (!isEmptyObject(validationResult)) {\r\n                error[name] = Object.assign({ ref: validateRef }, validationResult);\r\n                if (!validateAllFieldCriteria) {\r\n                    return error;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return error;\r\n};\n\nconst getPath = (rootPath, values, paths = []) => {\r\n    for (const property in values) {\r\n        const rootName = (rootPath +\r\n            (isObject(values)\r\n                ? `.${property}`\r\n                : `[${property}]`));\r\n        isPrimitive(values[property])\r\n            ? paths.push(rootName)\r\n            : getPath(rootName, values[property], paths);\r\n    }\r\n    return paths;\r\n};\n\nvar assignWatchFields = (fieldValues, fieldName, watchFields, inputValue, isSingleField) => {\r\n    let value = undefined;\r\n    watchFields.add(fieldName);\r\n    if (!isEmptyObject(fieldValues)) {\r\n        value = get(fieldValues, fieldName);\r\n        if (isObject(value) || Array.isArray(value)) {\r\n            getPath(fieldName, value).forEach((name) => watchFields.add(name));\r\n        }\r\n    }\r\n    return isUndefined(value)\r\n        ? isSingleField\r\n            ? inputValue\r\n            : get(inputValue, fieldName)\r\n        : value;\r\n};\n\nvar skipValidation = ({ isOnBlur, isOnChange, isOnTouch, isTouched, isReValidateOnBlur, isReValidateOnChange, isBlurEvent, isSubmitted, isOnAll, }) => {\r\n    if (isOnAll) {\r\n        return false;\r\n    }\r\n    else if (!isSubmitted && isOnTouch) {\r\n        return !(isTouched || isBlurEvent);\r\n    }\r\n    else if (isSubmitted ? isReValidateOnBlur : isOnBlur) {\r\n        return !isBlurEvent;\r\n    }\r\n    else if (isSubmitted ? isReValidateOnChange : isOnChange) {\r\n        return isBlurEvent;\r\n    }\r\n    return true;\r\n};\n\nvar getFieldArrayParentName = (name) => name.substring(0, name.indexOf('['));\n\nconst isMatchFieldArrayName = (name, searchName) => RegExp(`^${searchName}([|.)\\\\d+`.replace(/\\[/g, '\\\\[').replace(/\\]/g, '\\\\]')).test(name);\r\nvar isNameInFieldArray = (names, name) => [...names].some((current) => isMatchFieldArrayName(name, current));\n\nvar isSelectInput = (element) => element.type === `${SELECT}-one`;\n\nfunction onDomRemove(fieldsRef, removeFieldEventListenerAndRef) {\r\n    const observer = new MutationObserver(() => {\r\n        for (const field of Object.values(fieldsRef.current)) {\r\n            if (field && field.options) {\r\n                for (const option of field.options) {\r\n                    if (option && option.ref && isDetached(option.ref)) {\r\n                        removeFieldEventListenerAndRef(field);\r\n                    }\r\n                }\r\n            }\r\n            else if (field && isDetached(field.ref)) {\r\n                removeFieldEventListenerAndRef(field);\r\n            }\r\n        }\r\n    });\r\n    observer.observe(window.document, {\r\n        childList: true,\r\n        subtree: true,\r\n    });\r\n    return observer;\r\n}\n\nfunction cloneObject(data, isWeb = true) {\r\n    let copy;\r\n    if (isPrimitive(data) || (isWeb && data instanceof File)) {\r\n        return data;\r\n    }\r\n    if (data instanceof Date) {\r\n        copy = new Date(data.getTime());\r\n        return copy;\r\n    }\r\n    if (data instanceof Set) {\r\n        copy = new Set();\r\n        for (const item of data) {\r\n            copy.add(item);\r\n        }\r\n        return copy;\r\n    }\r\n    if (data instanceof Map) {\r\n        copy = new Map();\r\n        for (const key of data.keys()) {\r\n            copy.set(key, cloneObject(data.get(key), isWeb));\r\n        }\r\n        return copy;\r\n    }\r\n    copy = Array.isArray(data) ? [] : {};\r\n    for (const key in data) {\r\n        copy[key] = cloneObject(data[key], isWeb);\r\n    }\r\n    return copy;\r\n}\n\nvar modeChecker = (mode) => ({\r\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\r\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\r\n    isOnChange: mode === VALIDATION_MODE.onChange,\r\n    isOnAll: mode === VALIDATION_MODE.all,\r\n    isOnTouch: mode === VALIDATION_MODE.onTouched,\r\n});\n\nvar isRadioOrCheckboxFunction = (ref) => isRadioInput(ref) || isCheckBoxInput(ref);\n\nconst isWindowUndefined = typeof window === UNDEFINED;\r\nconst isWeb = typeof document !== UNDEFINED &&\r\n    !isWindowUndefined &&\r\n    !isUndefined(HTMLElement);\r\nconst isProxyEnabled = isWeb ? 'Proxy' in window : typeof Proxy !== UNDEFINED;\r\nfunction useForm({ mode = VALIDATION_MODE.onSubmit, reValidateMode = VALIDATION_MODE.onChange, resolver, context, defaultValues = {}, shouldFocusError = true, shouldUnregister = true, criteriaMode, } = {}) {\r\n    const fieldsRef = Object(react[\"useRef\"])({});\r\n    const fieldArrayDefaultValuesRef = Object(react[\"useRef\"])({});\r\n    const fieldArrayValuesRef = Object(react[\"useRef\"])({});\r\n    const watchFieldsRef = Object(react[\"useRef\"])(new Set());\r\n    const useWatchFieldsRef = Object(react[\"useRef\"])({});\r\n    const useWatchRenderFunctionsRef = Object(react[\"useRef\"])({});\r\n    const fieldsWithValidationRef = Object(react[\"useRef\"])({});\r\n    const validFieldsRef = Object(react[\"useRef\"])({});\r\n    const defaultValuesRef = Object(react[\"useRef\"])(defaultValues);\r\n    const defaultValuesAtRenderRef = Object(react[\"useRef\"])({});\r\n    const isUnMount = Object(react[\"useRef\"])(false);\r\n    const isWatchAllRef = Object(react[\"useRef\"])(false);\r\n    const handleChangeRef = Object(react[\"useRef\"])();\r\n    const shallowFieldsStateRef = Object(react[\"useRef\"])({});\r\n    const resetFieldArrayFunctionRef = Object(react[\"useRef\"])({});\r\n    const contextRef = Object(react[\"useRef\"])(context);\r\n    const resolverRef = Object(react[\"useRef\"])(resolver);\r\n    const fieldArrayNamesRef = Object(react[\"useRef\"])(new Set());\r\n    const modeRef = Object(react[\"useRef\"])(modeChecker(mode));\r\n    const { isOnSubmit, isOnTouch } = modeRef.current;\r\n    const isValidateAllFieldCriteria = criteriaMode === VALIDATION_MODE.all;\r\n    const [formState, setFormState] = Object(react[\"useState\"])({\r\n        isDirty: false,\r\n        dirtyFields: {},\r\n        isSubmitted: false,\r\n        submitCount: 0,\r\n        touched: {},\r\n        isSubmitting: false,\r\n        isSubmitSuccessful: false,\r\n        isValid: !isOnSubmit,\r\n        errors: {},\r\n    });\r\n    const readFormStateRef = Object(react[\"useRef\"])({\r\n        isDirty: !isProxyEnabled,\r\n        dirtyFields: !isProxyEnabled,\r\n        touched: !isProxyEnabled || isOnTouch,\r\n        isSubmitting: !isProxyEnabled,\r\n        isValid: !isProxyEnabled,\r\n    });\r\n    const formStateRef = Object(react[\"useRef\"])(formState);\r\n    const observerRef = Object(react[\"useRef\"])();\r\n    const { isOnBlur: isReValidateOnBlur, isOnChange: isReValidateOnChange, } = Object(react[\"useRef\"])(modeChecker(reValidateMode)).current;\r\n    contextRef.current = context;\r\n    resolverRef.current = resolver;\r\n    formStateRef.current = formState;\r\n    shallowFieldsStateRef.current = shouldUnregister\r\n        ? {}\r\n        : isEmptyObject(shallowFieldsStateRef.current)\r\n            ? cloneObject(defaultValues, isWeb)\r\n            : shallowFieldsStateRef.current;\r\n    const updateFormState = Object(react[\"useCallback\"])((state = {}) => {\r\n        if (!isUnMount.current) {\r\n            formStateRef.current = Object.assign(Object.assign({}, formStateRef.current), state);\r\n            setFormState(formStateRef.current);\r\n        }\r\n    }, []);\r\n    const shouldRenderBaseOnError = Object(react[\"useCallback\"])((name, error, shouldRender = false, state = {}, isValid) => {\r\n        let shouldReRender = shouldRender ||\r\n            isErrorStateChanged({\r\n                errors: formStateRef.current.errors,\r\n                error,\r\n                name,\r\n                validFields: validFieldsRef.current,\r\n                fieldsWithValidation: fieldsWithValidationRef.current,\r\n            });\r\n        const previousError = get(formStateRef.current.errors, name);\r\n        if (error) {\r\n            unset(validFieldsRef.current, name);\r\n            shouldReRender =\r\n                shouldReRender ||\r\n                    !previousError ||\r\n                    !deepEqual(previousError, error, true);\r\n            set(formStateRef.current.errors, name, error);\r\n        }\r\n        else {\r\n            if (get(fieldsWithValidationRef.current, name) || resolverRef.current) {\r\n                set(validFieldsRef.current, name, true);\r\n                shouldReRender = shouldReRender || previousError;\r\n            }\r\n            unset(formStateRef.current.errors, name);\r\n        }\r\n        if ((shouldReRender && !isNullOrUndefined(shouldRender)) ||\r\n            !isEmptyObject(state)) {\r\n            updateFormState(Object.assign(Object.assign({}, state), (resolverRef.current ? { isValid: !!isValid } : {})));\r\n        }\r\n    }, []);\r\n    const setFieldValue = Object(react[\"useCallback\"])((name, rawValue) => {\r\n        const { ref, options } = fieldsRef.current[name];\r\n        const value = isWeb && isHTMLElement(ref) && isNullOrUndefined(rawValue)\r\n            ? ''\r\n            : rawValue;\r\n        if (isRadioInput(ref)) {\r\n            (options || []).forEach(({ ref: radioRef }) => (radioRef.checked = radioRef.value === value));\r\n        }\r\n        else if (isFileInput(ref) && !isString(value)) {\r\n            ref.files = value;\r\n        }\r\n        else if (isMultipleSelect(ref)) {\r\n            [...ref.options].forEach((selectRef) => (selectRef.selected = value.includes(selectRef.value)));\r\n        }\r\n        else if (isCheckBoxInput(ref) && options) {\r\n            options.length > 1\r\n                ? options.forEach(({ ref: checkboxRef }) => (checkboxRef.checked = Array.isArray(value)\r\n                    ? !!value.find((data) => data === checkboxRef.value)\r\n                    : value === checkboxRef.value))\r\n                : (options[0].ref.checked = !!value);\r\n        }\r\n        else {\r\n            ref.value = value;\r\n        }\r\n    }, []);\r\n    const isFormDirty = Object(react[\"useCallback\"])((name, data) => {\r\n        if (readFormStateRef.current.isDirty) {\r\n            const formValues = getValues();\r\n            name && data && set(formValues, name, data);\r\n            return !deepEqual(formValues, isEmptyObject(defaultValuesRef.current)\r\n                ? defaultValuesAtRenderRef.current\r\n                : defaultValuesRef.current);\r\n        }\r\n        return false;\r\n    }, []);\r\n    const updateAndGetDirtyState = Object(react[\"useCallback\"])((name, shouldRender = true) => {\r\n        if (readFormStateRef.current.isDirty ||\r\n            readFormStateRef.current.dirtyFields) {\r\n            const isFieldDirty = !deepEqual(get(defaultValuesAtRenderRef.current, name), getFieldValue(fieldsRef, name, shallowFieldsStateRef));\r\n            const isDirtyFieldExist = get(formStateRef.current.dirtyFields, name);\r\n            const previousIsDirty = formStateRef.current.isDirty;\r\n            isFieldDirty\r\n                ? set(formStateRef.current.dirtyFields, name, true)\r\n                : unset(formStateRef.current.dirtyFields, name);\r\n            const state = {\r\n                isDirty: isFormDirty(),\r\n                dirtyFields: formStateRef.current.dirtyFields,\r\n            };\r\n            const isChanged = (readFormStateRef.current.isDirty &&\r\n                previousIsDirty !== state.isDirty) ||\r\n                (readFormStateRef.current.dirtyFields &&\r\n                    isDirtyFieldExist !== get(formStateRef.current.dirtyFields, name));\r\n            isChanged && shouldRender && updateFormState(state);\r\n            return isChanged ? state : {};\r\n        }\r\n        return {};\r\n    }, []);\r\n    const executeValidation = Object(react[\"useCallback\"])(async (name, skipReRender) => {\r\n        if (false) {}\r\n        const error = (await validateField(fieldsRef, isValidateAllFieldCriteria, fieldsRef.current[name], shallowFieldsStateRef))[name];\r\n        shouldRenderBaseOnError(name, error, skipReRender);\r\n        return isUndefined(error);\r\n    }, [shouldRenderBaseOnError, isValidateAllFieldCriteria]);\r\n    const executeSchemaOrResolverValidation = Object(react[\"useCallback\"])(async (names) => {\r\n        const { errors } = await resolverRef.current(getValues(), contextRef.current, isValidateAllFieldCriteria);\r\n        const previousFormIsValid = formStateRef.current.isValid;\r\n        if (Array.isArray(names)) {\r\n            const isInputsValid = names\r\n                .map((name) => {\r\n                const error = get(errors, name);\r\n                error\r\n                    ? set(formStateRef.current.errors, name, error)\r\n                    : unset(formStateRef.current.errors, name);\r\n                return !error;\r\n            })\r\n                .every(Boolean);\r\n            updateFormState({\r\n                isValid: isEmptyObject(errors),\r\n            });\r\n            return isInputsValid;\r\n        }\r\n        else {\r\n            const error = get(errors, names);\r\n            shouldRenderBaseOnError(names, error, previousFormIsValid !== isEmptyObject(errors), {}, isEmptyObject(errors));\r\n            return !error;\r\n        }\r\n    }, [shouldRenderBaseOnError, isValidateAllFieldCriteria]);\r\n    const trigger = Object(react[\"useCallback\"])(async (name) => {\r\n        const fields = name || Object.keys(fieldsRef.current);\r\n        if (resolverRef.current) {\r\n            return executeSchemaOrResolverValidation(fields);\r\n        }\r\n        if (Array.isArray(fields)) {\r\n            !name && (formStateRef.current.errors = {});\r\n            const result = await Promise.all(fields.map(async (data) => await executeValidation(data, null)));\r\n            updateFormState();\r\n            return result.every(Boolean);\r\n        }\r\n        return await executeValidation(fields, readFormStateRef.current.isValid);\r\n    }, [executeSchemaOrResolverValidation, executeValidation]);\r\n    const setInternalValues = Object(react[\"useCallback\"])((name, value, { shouldDirty, shouldValidate }) => {\r\n        const data = {};\r\n        set(data, name, value);\r\n        for (const fieldName of getPath(name, value)) {\r\n            if (fieldsRef.current[fieldName]) {\r\n                setFieldValue(fieldName, get(data, fieldName));\r\n                shouldDirty && updateAndGetDirtyState(fieldName);\r\n                shouldValidate && trigger(fieldName);\r\n            }\r\n        }\r\n    }, [trigger, setFieldValue, updateAndGetDirtyState]);\r\n    const setInternalValue = Object(react[\"useCallback\"])((name, value, config) => {\r\n        !isPrimitive(value) && set(shallowFieldsStateRef.current, name, value);\r\n        if (fieldsRef.current[name]) {\r\n            setFieldValue(name, value);\r\n            config.shouldDirty && updateAndGetDirtyState(name);\r\n            config.shouldValidate && trigger(name);\r\n        }\r\n        else if (!isPrimitive(value)) {\r\n            setInternalValues(name, value, config);\r\n            if (fieldArrayNamesRef.current.has(name)) {\r\n                fieldArrayDefaultValuesRef.current[name] = value;\r\n                resetFieldArrayFunctionRef.current[name]({\r\n                    [name]: value,\r\n                });\r\n                if ((readFormStateRef.current.isDirty ||\r\n                    readFormStateRef.current.dirtyFields) &&\r\n                    config.shouldDirty) {\r\n                    set(formStateRef.current.dirtyFields, name, setFieldArrayDirtyFields(value, get(defaultValuesRef.current, name, []), get(formStateRef.current.dirtyFields, name, [])));\r\n                    updateFormState({\r\n                        isDirty: !deepEqual(Object.assign(Object.assign({}, getValues()), { [name]: value }), defaultValuesRef.current),\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        !shouldUnregister && set(shallowFieldsStateRef.current, name, value);\r\n    }, [updateAndGetDirtyState, setFieldValue, setInternalValues]);\r\n    const isFieldWatched = (name) => isWatchAllRef.current ||\r\n        watchFieldsRef.current.has(name) ||\r\n        watchFieldsRef.current.has((name.match(/\\w+/) || [])[0]);\r\n    const renderWatchedInputs = (name, found = true) => {\r\n        if (!isEmptyObject(useWatchFieldsRef.current)) {\r\n            for (const key in useWatchFieldsRef.current) {\r\n                if (!name ||\r\n                    !useWatchFieldsRef.current[key].size ||\r\n                    useWatchFieldsRef.current[key].has(name) ||\r\n                    useWatchFieldsRef.current[key].has(getFieldArrayParentName(name))) {\r\n                    useWatchRenderFunctionsRef.current[key]();\r\n                    found = false;\r\n                }\r\n            }\r\n        }\r\n        return found;\r\n    };\r\n    function setValue(name, value, config) {\r\n        setInternalValue(name, value, config || {});\r\n        isFieldWatched(name) && updateFormState();\r\n        renderWatchedInputs(name);\r\n    }\r\n    handleChangeRef.current = handleChangeRef.current\r\n        ? handleChangeRef.current\r\n        : async ({ type, target }) => {\r\n            let name = target.name;\r\n            const field = fieldsRef.current[name];\r\n            let error;\r\n            let isValid;\r\n            if (field) {\r\n                const isBlurEvent = type === EVENTS.BLUR;\r\n                const shouldSkipValidation = skipValidation(Object.assign({ isBlurEvent,\r\n                    isReValidateOnChange,\r\n                    isReValidateOnBlur, isTouched: !!get(formStateRef.current.touched, name), isSubmitted: formStateRef.current.isSubmitted }, modeRef.current));\r\n                let state = updateAndGetDirtyState(name, false);\r\n                let shouldRender = !isEmptyObject(state) ||\r\n                    isFieldWatched(name);\r\n                if (isBlurEvent &&\r\n                    !get(formStateRef.current.touched, name) &&\r\n                    readFormStateRef.current.touched) {\r\n                    set(formStateRef.current.touched, name, true);\r\n                    state = Object.assign(Object.assign({}, state), { touched: formStateRef.current.touched });\r\n                }\r\n                if (!shouldUnregister && isCheckBoxInput(target)) {\r\n                    set(shallowFieldsStateRef.current, name, getFieldValue(fieldsRef, name));\r\n                }\r\n                if (shouldSkipValidation) {\r\n                    renderWatchedInputs(name);\r\n                    return ((!isEmptyObject(state) ||\r\n                        (shouldRender && isEmptyObject(state))) &&\r\n                        updateFormState(state));\r\n                }\r\n                if (resolverRef.current) {\r\n                    const { errors } = await resolverRef.current(getValues(), contextRef.current, isValidateAllFieldCriteria);\r\n                    const previousFormIsValid = formStateRef.current.isValid;\r\n                    error = get(errors, name);\r\n                    if (isCheckBoxInput(target) &&\r\n                        !error &&\r\n                        resolverRef.current) {\r\n                        const parentNodeName = getFieldArrayParentName(name);\r\n                        const currentError = get(errors, parentNodeName, {});\r\n                        currentError.type &&\r\n                            currentError.message &&\r\n                            (error = currentError);\r\n                        if (parentNodeName &&\r\n                            (currentError ||\r\n                                get(formStateRef.current.errors, parentNodeName))) {\r\n                            name = parentNodeName;\r\n                        }\r\n                    }\r\n                    isValid = isEmptyObject(errors);\r\n                    previousFormIsValid !== isValid && (shouldRender = true);\r\n                }\r\n                else {\r\n                    error = (await validateField(fieldsRef, isValidateAllFieldCriteria, field, shallowFieldsStateRef))[name];\r\n                }\r\n                renderWatchedInputs(name);\r\n                shouldRenderBaseOnError(name, error, shouldRender, state, isValid);\r\n            }\r\n        };\r\n    function setFieldArrayDefaultValues(data) {\r\n        if (!shouldUnregister) {\r\n            let copy = cloneObject(data, isWeb);\r\n            for (const value of fieldArrayNamesRef.current) {\r\n                if (isKey(value) && !copy[value]) {\r\n                    copy = Object.assign(Object.assign({}, copy), { [value]: [] });\r\n                }\r\n            }\r\n            return copy;\r\n        }\r\n        return data;\r\n    }\r\n    function getValues(payload) {\r\n        if (isString(payload)) {\r\n            return getFieldValue(fieldsRef, payload, shallowFieldsStateRef);\r\n        }\r\n        if (Array.isArray(payload)) {\r\n            const data = {};\r\n            for (const name of payload) {\r\n                set(data, name, getFieldValue(fieldsRef, name, shallowFieldsStateRef));\r\n            }\r\n            return data;\r\n        }\r\n        return setFieldArrayDefaultValues(getFieldsValues(fieldsRef, cloneObject(shallowFieldsStateRef.current, isWeb), shouldUnregister));\r\n    }\r\n    const validateResolver = Object(react[\"useCallback\"])(async (values = {}) => {\r\n        const { errors } = await resolverRef.current(Object.assign(Object.assign({}, getValues()), values), contextRef.current, isValidateAllFieldCriteria);\r\n        const isValid = isEmptyObject(errors);\r\n        formStateRef.current.isValid !== isValid &&\r\n            updateFormState({\r\n                isValid,\r\n            });\r\n    }, [isValidateAllFieldCriteria]);\r\n    const removeFieldEventListener = Object(react[\"useCallback\"])((field, forceDelete) => findRemovedFieldAndRemoveListener(fieldsRef, handleChangeRef.current, field, shallowFieldsStateRef, shouldUnregister, forceDelete), [shouldUnregister]);\r\n    const updateWatchedValue = Object(react[\"useCallback\"])((name) => {\r\n        if (isWatchAllRef.current) {\r\n            updateFormState();\r\n        }\r\n        else {\r\n            for (const watchField of watchFieldsRef.current) {\r\n                if (watchField.startsWith(name)) {\r\n                    updateFormState();\r\n                    break;\r\n                }\r\n            }\r\n            renderWatchedInputs(name);\r\n        }\r\n    }, []);\r\n    const removeFieldEventListenerAndRef = Object(react[\"useCallback\"])((field, forceDelete) => {\r\n        if (field) {\r\n            removeFieldEventListener(field, forceDelete);\r\n            if (shouldUnregister && !compact(field.options || []).length) {\r\n                unset(defaultValuesAtRenderRef.current, field.ref.name);\r\n                unset(validFieldsRef.current, field.ref.name);\r\n                unset(fieldsWithValidationRef.current, field.ref.name);\r\n                unset(formStateRef.current.errors, field.ref.name);\r\n                set(formStateRef.current.dirtyFields, field.ref.name, true);\r\n                updateFormState({\r\n                    isDirty: isFormDirty(),\r\n                });\r\n                readFormStateRef.current.isValid &&\r\n                    resolverRef.current &&\r\n                    validateResolver();\r\n                updateWatchedValue(field.ref.name);\r\n            }\r\n        }\r\n    }, [validateResolver, removeFieldEventListener]);\r\n    function clearErrors(name) {\r\n        name &&\r\n            (Array.isArray(name) ? name : [name]).forEach((inputName) => fieldsRef.current[inputName] && isKey(inputName)\r\n                ? delete formStateRef.current.errors[inputName]\r\n                : unset(formStateRef.current.errors, inputName));\r\n        updateFormState({\r\n            errors: name ? formStateRef.current.errors : {},\r\n        });\r\n    }\r\n    function setError(name, error) {\r\n        const ref = (fieldsRef.current[name] || {}).ref;\r\n        set(formStateRef.current.errors, name, Object.assign(Object.assign({}, error), { ref }));\r\n        updateFormState({\r\n            isValid: false,\r\n        });\r\n        error.shouldFocus && ref && ref.focus && ref.focus();\r\n    }\r\n    const watchInternal = Object(react[\"useCallback\"])((fieldNames, defaultValue, watchId) => {\r\n        const watchFields = watchId\r\n            ? useWatchFieldsRef.current[watchId]\r\n            : watchFieldsRef.current;\r\n        let fieldValues = getFieldsValues(fieldsRef, cloneObject(shallowFieldsStateRef.current, isWeb), shouldUnregister, false, fieldNames);\r\n        if (isString(fieldNames)) {\r\n            if (fieldArrayNamesRef.current.has(fieldNames)) {\r\n                const fieldArrayValue = get(fieldArrayValuesRef.current, fieldNames, []);\r\n                fieldValues =\r\n                    fieldArrayValue.length !==\r\n                        compact(get(fieldValues, fieldNames, [])).length ||\r\n                        !fieldArrayValue.length\r\n                        ? fieldArrayValuesRef.current\r\n                        : fieldValues;\r\n            }\r\n            return assignWatchFields(fieldValues, fieldNames, watchFields, isUndefined(get(defaultValuesRef.current, fieldNames))\r\n                ? defaultValue\r\n                : get(defaultValuesRef.current, fieldNames), true);\r\n        }\r\n        const combinedDefaultValues = isUndefined(defaultValue)\r\n            ? defaultValuesRef.current\r\n            : defaultValue;\r\n        if (Array.isArray(fieldNames)) {\r\n            return fieldNames.reduce((previous, name) => (Object.assign(Object.assign({}, previous), { [name]: assignWatchFields(fieldValues, name, watchFields, combinedDefaultValues) })), {});\r\n        }\r\n        isWatchAllRef.current = isUndefined(watchId);\r\n        return transformToNestObject((!isEmptyObject(fieldValues) && fieldValues) ||\r\n            combinedDefaultValues);\r\n    }, []);\r\n    function watch(fieldNames, defaultValue) {\r\n        return watchInternal(fieldNames, defaultValue);\r\n    }\r\n    function unregister(name) {\r\n        for (const fieldName of Array.isArray(name) ? name : [name]) {\r\n            removeFieldEventListenerAndRef(fieldsRef.current[fieldName], true);\r\n        }\r\n    }\r\n    function registerFieldRef(ref, options = {}) {\r\n        if (false) {}\r\n        const { name, type, value } = ref;\r\n        const fieldRefAndValidationOptions = Object.assign({ ref }, options);\r\n        const fields = fieldsRef.current;\r\n        const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\r\n        const isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\r\n        const compareRef = (currentRef) => isWeb && (!isHTMLElement(ref) || currentRef === ref);\r\n        let field = fields[name];\r\n        let isEmptyDefaultValue = true;\r\n        let defaultValue;\r\n        if (field &&\r\n            (isRadioOrCheckbox\r\n                ? Array.isArray(field.options) &&\r\n                    compact(field.options).find((option) => {\r\n                        return value === option.ref.value && compareRef(option.ref);\r\n                    })\r\n                : compareRef(field.ref))) {\r\n            fields[name] = Object.assign(Object.assign({}, field), options);\r\n            return;\r\n        }\r\n        if (type) {\r\n            field = isRadioOrCheckbox\r\n                ? Object.assign({ options: [\r\n                        ...compact((field && field.options) || []),\r\n                        {\r\n                            ref,\r\n                        },\r\n                    ], ref: { type, name } }, options) : Object.assign({}, fieldRefAndValidationOptions);\r\n        }\r\n        else {\r\n            field = fieldRefAndValidationOptions;\r\n        }\r\n        fields[name] = field;\r\n        const isEmptyUnmountFields = isUndefined(get(shallowFieldsStateRef.current, name));\r\n        if (!isEmptyObject(defaultValuesRef.current) || !isEmptyUnmountFields) {\r\n            defaultValue = get(isEmptyUnmountFields\r\n                ? defaultValuesRef.current\r\n                : shallowFieldsStateRef.current, name);\r\n            isEmptyDefaultValue = isUndefined(defaultValue);\r\n            if (!isEmptyDefaultValue && !isFieldArray) {\r\n                setFieldValue(name, defaultValue);\r\n            }\r\n        }\r\n        if (!isEmptyObject(options)) {\r\n            set(fieldsWithValidationRef.current, name, true);\r\n            if (!isOnSubmit && readFormStateRef.current.isValid) {\r\n                validateField(fieldsRef, isValidateAllFieldCriteria, field, shallowFieldsStateRef).then((error) => {\r\n                    const previousFormIsValid = formStateRef.current.isValid;\r\n                    isEmptyObject(error)\r\n                        ? set(validFieldsRef.current, name, true)\r\n                        : unset(validFieldsRef.current, name);\r\n                    previousFormIsValid !== isEmptyObject(error) && updateFormState();\r\n                });\r\n            }\r\n        }\r\n        if (!defaultValuesAtRenderRef.current[name] &&\r\n            !(isFieldArray && isEmptyDefaultValue)) {\r\n            const fieldValue = getFieldValue(fieldsRef, name, shallowFieldsStateRef);\r\n            set(defaultValuesAtRenderRef.current, name, isEmptyDefaultValue\r\n                ? isObject(fieldValue)\r\n                    ? Object.assign({}, fieldValue) : fieldValue\r\n                : defaultValue);\r\n            !isFieldArray && unset(formStateRef.current.dirtyFields, name);\r\n        }\r\n        if (type) {\r\n            attachEventListeners(isRadioOrCheckbox && field.options\r\n                ? field.options[field.options.length - 1]\r\n                : field, isRadioOrCheckbox || isSelectInput(ref), handleChangeRef.current);\r\n        }\r\n    }\r\n    function register(refOrRegisterOptions, options) {\r\n        if (!isWindowUndefined) {\r\n            if (isString(refOrRegisterOptions)) {\r\n                registerFieldRef({ name: refOrRegisterOptions }, options);\r\n            }\r\n            else if (isObject(refOrRegisterOptions) &&\r\n                'name' in refOrRegisterOptions) {\r\n                registerFieldRef(refOrRegisterOptions, options);\r\n            }\r\n            else {\r\n                return (ref) => ref && registerFieldRef(ref, refOrRegisterOptions);\r\n            }\r\n        }\r\n    }\r\n    const handleSubmit = Object(react[\"useCallback\"])((onValid, onInvalid) => async (e) => {\r\n        if (e && e.preventDefault) {\r\n            e.preventDefault();\r\n            e.persist();\r\n        }\r\n        let fieldErrors = {};\r\n        let fieldValues = setFieldArrayDefaultValues(getFieldsValues(fieldsRef, cloneObject(shallowFieldsStateRef.current, isWeb), shouldUnregister, true));\r\n        readFormStateRef.current.isSubmitting &&\r\n            updateFormState({\r\n                isSubmitting: true,\r\n            });\r\n        try {\r\n            if (resolverRef.current) {\r\n                const { errors, values } = await resolverRef.current(fieldValues, contextRef.current, isValidateAllFieldCriteria);\r\n                formStateRef.current.errors = fieldErrors = errors;\r\n                fieldValues = values;\r\n            }\r\n            else {\r\n                for (const field of Object.values(fieldsRef.current)) {\r\n                    if (field) {\r\n                        const { name } = field.ref;\r\n                        const fieldError = await validateField(fieldsRef, isValidateAllFieldCriteria, field, shallowFieldsStateRef);\r\n                        if (fieldError[name]) {\r\n                            set(fieldErrors, name, fieldError[name]);\r\n                            unset(validFieldsRef.current, name);\r\n                        }\r\n                        else if (get(fieldsWithValidationRef.current, name)) {\r\n                            unset(formStateRef.current.errors, name);\r\n                            set(validFieldsRef.current, name, true);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (isEmptyObject(fieldErrors) &&\r\n                Object.keys(formStateRef.current.errors).every((name) => name in fieldsRef.current)) {\r\n                updateFormState({\r\n                    errors: {},\r\n                    isSubmitting: true,\r\n                });\r\n                await onValid(fieldValues, e);\r\n            }\r\n            else {\r\n                formStateRef.current.errors = Object.assign(Object.assign({}, formStateRef.current.errors), fieldErrors);\r\n                onInvalid && (await onInvalid(formStateRef.current.errors, e));\r\n                shouldFocusError &&\r\n                    focusOnErrorField(fieldsRef.current, formStateRef.current.errors);\r\n            }\r\n        }\r\n        finally {\r\n            formStateRef.current.isSubmitting = false;\r\n            updateFormState({\r\n                isSubmitted: true,\r\n                isSubmitting: false,\r\n                isSubmitSuccessful: isEmptyObject(formStateRef.current.errors),\r\n                submitCount: formStateRef.current.submitCount + 1,\r\n            });\r\n        }\r\n    }, [shouldFocusError, isValidateAllFieldCriteria]);\r\n    const resetRefs = ({ errors, isDirty, isSubmitted, touched, isValid, submitCount, dirtyFields, }) => {\r\n        if (!isValid) {\r\n            validFieldsRef.current = {};\r\n            fieldsWithValidationRef.current = {};\r\n        }\r\n        defaultValuesAtRenderRef.current = {};\r\n        fieldArrayDefaultValuesRef.current = {};\r\n        watchFieldsRef.current = new Set();\r\n        isWatchAllRef.current = false;\r\n        updateFormState({\r\n            submitCount: submitCount ? formStateRef.current.submitCount : 0,\r\n            isDirty: isDirty ? formStateRef.current.isDirty : false,\r\n            isSubmitted: isSubmitted ? formStateRef.current.isSubmitted : false,\r\n            isValid: isValid ? formStateRef.current.isValid : false,\r\n            dirtyFields: dirtyFields ? formStateRef.current.dirtyFields : {},\r\n            touched: touched ? formStateRef.current.touched : {},\r\n            errors: errors ? formStateRef.current.errors : {},\r\n            isSubmitting: false,\r\n            isSubmitSuccessful: false,\r\n        });\r\n    };\r\n    const reset = (values, omitResetState = {}) => {\r\n        if (isWeb) {\r\n            for (const field of Object.values(fieldsRef.current)) {\r\n                if (field) {\r\n                    const { ref, options } = field;\r\n                    const inputRef = isRadioOrCheckboxFunction(ref) && Array.isArray(options)\r\n                        ? options[0].ref\r\n                        : ref;\r\n                    if (isHTMLElement(inputRef)) {\r\n                        try {\r\n                            inputRef.closest('form').reset();\r\n                            break;\r\n                        }\r\n                        catch (_a) { }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        fieldsRef.current = {};\r\n        defaultValuesRef.current = cloneObject(values || defaultValuesRef.current, isWeb);\r\n        values && renderWatchedInputs('');\r\n        Object.values(resetFieldArrayFunctionRef.current).forEach((resetFieldArray) => isFunction(resetFieldArray) && resetFieldArray());\r\n        shallowFieldsStateRef.current = shouldUnregister\r\n            ? {}\r\n            : cloneObject(values, isWeb) || {};\r\n        resetRefs(omitResetState);\r\n    };\r\n    Object(react[\"useEffect\"])(() => {\r\n        resolver && readFormStateRef.current.isValid && validateResolver();\r\n        observerRef.current =\r\n            observerRef.current || !isWeb\r\n                ? observerRef.current\r\n                : onDomRemove(fieldsRef, removeFieldEventListenerAndRef);\r\n    }, [removeFieldEventListenerAndRef, defaultValuesRef.current]);\r\n    Object(react[\"useEffect\"])(() => () => {\r\n        isUnMount.current = true;\r\n        observerRef.current && observerRef.current.disconnect();\r\n        if (false) {}\r\n        Object.values(fieldsRef.current).forEach((field) => removeFieldEventListenerAndRef(field, true));\r\n    }, []);\r\n    if (!resolver && readFormStateRef.current.isValid) {\r\n        formState.isValid =\r\n            deepEqual(validFieldsRef.current, fieldsWithValidationRef.current) &&\r\n                isEmptyObject(formStateRef.current.errors);\r\n    }\r\n    const commonProps = {\r\n        trigger,\r\n        setValue: Object(react[\"useCallback\"])(setValue, [setInternalValue, trigger]),\r\n        getValues: Object(react[\"useCallback\"])(getValues, []),\r\n        register: Object(react[\"useCallback\"])(register, [defaultValuesRef.current]),\r\n        unregister: Object(react[\"useCallback\"])(unregister, []),\r\n    };\r\n    const control = Object(react[\"useMemo\"])(() => (Object.assign({ isFormDirty,\r\n        updateWatchedValue,\r\n        shouldUnregister,\r\n        updateFormState,\r\n        removeFieldEventListener,\r\n        watchInternal, mode: modeRef.current, reValidateMode: {\r\n            isReValidateOnBlur,\r\n            isReValidateOnChange,\r\n        }, validateResolver: resolver ? validateResolver : undefined, fieldsRef,\r\n        resetFieldArrayFunctionRef,\r\n        useWatchFieldsRef,\r\n        useWatchRenderFunctionsRef,\r\n        fieldArrayDefaultValuesRef,\r\n        validFieldsRef,\r\n        fieldsWithValidationRef,\r\n        fieldArrayNamesRef,\r\n        readFormStateRef,\r\n        formStateRef,\r\n        defaultValuesRef,\r\n        shallowFieldsStateRef,\r\n        fieldArrayValuesRef }, commonProps)), [\r\n        defaultValuesRef.current,\r\n        updateWatchedValue,\r\n        shouldUnregister,\r\n        removeFieldEventListener,\r\n        watchInternal,\r\n    ]);\r\n    return Object.assign({ watch,\r\n        control, formState: isProxyEnabled\r\n            ? new Proxy(formState, {\r\n                get: (obj, prop) => {\r\n                    if (false) {}\r\n                    if (prop in obj) {\r\n                        readFormStateRef.current[prop] = true;\r\n                        return obj[prop];\r\n                    }\r\n                    return undefined;\r\n                },\r\n            })\r\n            : formState, handleSubmit, reset: Object(react[\"useCallback\"])(reset, []), clearErrors: Object(react[\"useCallback\"])(clearErrors, []), setError: Object(react[\"useCallback\"])(setError, []), errors: formState.errors }, commonProps);\r\n}\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nconst FormContext = Object(react[\"createContext\"])(null);\r\nFormContext.displayName = 'RHFContext';\r\nconst useFormContext = () => Object(react[\"useContext\"])(FormContext);\r\nconst FormProvider = (_a) => {\r\n    var { children } = _a, props = __rest(_a, [\"children\"]);\r\n    return (Object(react[\"createElement\"])(FormContext.Provider, { value: Object.assign({}, props) }, children));\r\n};\n\nvar generateId = () => {\r\n    const d = typeof performance === UNDEFINED ? Date.now() : performance.now() * 1000;\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\r\n        const r = (Math.random() * 16 + d) % 16 | 0;\r\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\r\n    });\r\n};\n\nfunction removeAtIndexes(data, indexes) {\r\n    let i = 0;\r\n    const temp = [...data];\r\n    for (const index of indexes) {\r\n        temp.splice(index - i, 1);\r\n        i++;\r\n    }\r\n    return compact(temp).length ? temp : [];\r\n}\r\nvar removeArrayAt = (data, index) => isUndefined(index)\r\n    ? []\r\n    : removeAtIndexes(data, (Array.isArray(index) ? index : [index]).sort());\n\nvar moveArrayAt = (data, from, to) => {\r\n    if (Array.isArray(data)) {\r\n        if (isUndefined(data[to])) {\r\n            data[to] = undefined;\r\n        }\r\n        data.splice(to, 0, data.splice(from, 1)[0]);\r\n        return data;\r\n    }\r\n    return [];\r\n};\n\nvar swapArrayAt = (data, indexA, indexB) => {\r\n    const temp = [data[indexB], data[indexA]];\r\n    data[indexA] = temp[0];\r\n    data[indexB] = temp[1];\r\n};\n\nfunction prepend(data, value) {\r\n    return [...(Array.isArray(value) ? value : [value || undefined]), ...data];\r\n}\n\nfunction insert(data, index, value) {\r\n    return [\r\n        ...data.slice(0, index),\r\n        ...(Array.isArray(value) ? value : [value || undefined]),\r\n        ...data.slice(index),\r\n    ];\r\n}\n\nvar fillEmptyArray = (value) => Array.isArray(value) ? Array(value.length).fill(undefined) : undefined;\n\nvar fillBooleanArray = (value) => (Array.isArray(value) ? value : [value]).map((data) => {\r\n    if (isObject(data)) {\r\n        const object = {};\r\n        for (const key in data) {\r\n            object[key] = true;\r\n        }\r\n        return object;\r\n    }\r\n    return true;\r\n});\n\nconst mapIds = (values = [], keyName) => {\r\n    if (false) {}\r\n    return values.map((value) => (Object.assign({ [keyName]: generateId() }, value)));\r\n};\r\nconst useFieldArray = ({ control, name, keyName = 'id', }) => {\r\n    const methods = useFormContext();\r\n    if (false) {}\r\n    const focusIndexRef = Object(react[\"useRef\"])(-1);\r\n    const { isFormDirty, updateWatchedValue, resetFieldArrayFunctionRef, fieldArrayNamesRef, fieldsRef, defaultValuesRef, removeFieldEventListener, formStateRef, shallowFieldsStateRef, updateFormState, readFormStateRef, validFieldsRef, fieldsWithValidationRef, fieldArrayDefaultValuesRef, validateResolver, getValues, shouldUnregister, fieldArrayValuesRef, } = control || methods.control;\r\n    const fieldArrayParentName = getFieldArrayParentName(name);\r\n    const memoizedDefaultValues = Object(react[\"useRef\"])([\r\n        ...(get(fieldArrayDefaultValuesRef.current, fieldArrayParentName)\r\n            ? get(fieldArrayDefaultValuesRef.current, name, [])\r\n            : get(shouldUnregister\r\n                ? defaultValuesRef.current\r\n                : shallowFieldsStateRef.current, name, [])),\r\n    ]);\r\n    const [fields, setFields] = Object(react[\"useState\"])(mapIds(memoizedDefaultValues.current, keyName));\r\n    set(fieldArrayValuesRef.current, name, fields);\r\n    const omitKey = (fields) => fields.map((_a = {}) => {\r\n        var _b = keyName, omitted = _a[_b], rest = __rest(_a, [typeof _b === \"symbol\" ? _b : _b + \"\"]);\r\n        return rest;\r\n    });\r\n    fieldArrayNamesRef.current.add(name);\r\n    const getFieldArrayValue = Object(react[\"useCallback\"])(() => get(fieldArrayValuesRef.current, name, []), []);\r\n    const getCurrentFieldsValues = () => get(getValues(), name, getFieldArrayValue()).map((item, index) => (Object.assign(Object.assign({}, getFieldArrayValue()[index]), item)));\r\n    fieldArrayNamesRef.current.add(name);\r\n    if (fieldArrayParentName &&\r\n        !get(fieldArrayDefaultValuesRef.current, fieldArrayParentName)) {\r\n        set(fieldArrayDefaultValuesRef.current, fieldArrayParentName, cloneObject(get(defaultValuesRef.current, fieldArrayParentName)));\r\n    }\r\n    const setFieldAndValidState = (fieldsValues) => {\r\n        setFields(fieldsValues);\r\n        set(fieldArrayValuesRef.current, name, fieldsValues);\r\n        if (readFormStateRef.current.isValid && validateResolver) {\r\n            const values = getValues();\r\n            set(values, name, fieldsValues);\r\n            validateResolver(values);\r\n        }\r\n    };\r\n    const resetFields = () => {\r\n        for (const key in fieldsRef.current) {\r\n            isMatchFieldArrayName(key, name) &&\r\n                removeFieldEventListener(fieldsRef.current[key], true);\r\n        }\r\n    };\r\n    const cleanup = (ref) => !compact(get(ref, name, [])).length && unset(ref, name);\r\n    const updateDirtyFieldsWithDefaultValues = (updatedFieldArrayValues) => {\r\n        if (updatedFieldArrayValues) {\r\n            set(formStateRef.current.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFieldArrayValues), get(defaultValuesRef.current, name, []), get(formStateRef.current.dirtyFields, name, [])));\r\n        }\r\n    };\r\n    const batchStateUpdate = (method, args, updatedFieldValues, updatedFormValues = [], shouldSet = true, shouldUpdateValid = false) => {\r\n        if (get(shallowFieldsStateRef.current, name)) {\r\n            const output = method(get(shallowFieldsStateRef.current, name), args.argA, args.argB);\r\n            shouldSet && set(shallowFieldsStateRef.current, name, output);\r\n        }\r\n        if (get(fieldArrayDefaultValuesRef.current, name)) {\r\n            const output = method(get(fieldArrayDefaultValuesRef.current, name), args.argA, args.argB);\r\n            shouldSet && set(fieldArrayDefaultValuesRef.current, name, output);\r\n            cleanup(fieldArrayDefaultValuesRef.current);\r\n        }\r\n        if (Array.isArray(get(formStateRef.current.errors, name))) {\r\n            const output = method(get(formStateRef.current.errors, name), args.argA, args.argB);\r\n            shouldSet && set(formStateRef.current.errors, name, output);\r\n            cleanup(formStateRef.current.errors);\r\n        }\r\n        if (readFormStateRef.current.touched &&\r\n            get(formStateRef.current.touched, name)) {\r\n            const output = method(get(formStateRef.current.touched, name), args.argA, args.argB);\r\n            shouldSet && set(formStateRef.current.touched, name, output);\r\n            cleanup(formStateRef.current.touched);\r\n        }\r\n        if (readFormStateRef.current.dirtyFields ||\r\n            readFormStateRef.current.isDirty) {\r\n            const output = method(get(formStateRef.current.dirtyFields, name, []), args.argC, args.argD);\r\n            shouldSet && set(formStateRef.current.dirtyFields, name, output);\r\n            updateDirtyFieldsWithDefaultValues(updatedFieldValues);\r\n            cleanup(formStateRef.current.dirtyFields);\r\n        }\r\n        if (shouldUpdateValid &&\r\n            readFormStateRef.current.isValid &&\r\n            !validateResolver) {\r\n            set(validFieldsRef.current, name, method(get(validFieldsRef.current, name, []), args.argA));\r\n            cleanup(validFieldsRef.current);\r\n            set(fieldsWithValidationRef.current, name, method(get(fieldsWithValidationRef.current, name, []), args.argA));\r\n            cleanup(fieldsWithValidationRef.current);\r\n        }\r\n        updateFormState({\r\n            isDirty: isFormDirty(name, omitKey(updatedFormValues)),\r\n        });\r\n    };\r\n    const append = (value, shouldFocus = true) => {\r\n        const updateFormValues = [\r\n            ...getCurrentFieldsValues(),\r\n            ...mapIds(Array.isArray(value) ? value : [value], keyName),\r\n        ];\r\n        setFieldAndValidState(updateFormValues);\r\n        if (readFormStateRef.current.dirtyFields ||\r\n            readFormStateRef.current.isDirty) {\r\n            updateDirtyFieldsWithDefaultValues(updateFormValues);\r\n            updateFormState({\r\n                isDirty: true,\r\n                dirtyFields: formStateRef.current.dirtyFields,\r\n            });\r\n        }\r\n        !shouldUnregister &&\r\n            set(shallowFieldsStateRef.current, name, [\r\n                ...(get(shallowFieldsStateRef.current, name) || []),\r\n                value,\r\n            ]);\r\n        focusIndexRef.current = shouldFocus ? fields.length : -1;\r\n    };\r\n    const prepend$1 = (value, shouldFocus = true) => {\r\n        const emptyArray = fillEmptyArray(value);\r\n        const updatedFieldArrayValues = prepend(getCurrentFieldsValues(), mapIds(Array.isArray(value) ? value : [value], keyName));\r\n        setFieldAndValidState(updatedFieldArrayValues);\r\n        resetFields();\r\n        batchStateUpdate(prepend, {\r\n            argA: emptyArray,\r\n            argC: fillBooleanArray(value),\r\n        }, updatedFieldArrayValues);\r\n        focusIndexRef.current = shouldFocus ? 0 : -1;\r\n    };\r\n    const remove = (index) => {\r\n        const fieldValues = getCurrentFieldsValues();\r\n        const updatedFieldValues = removeArrayAt(fieldValues, index);\r\n        setFieldAndValidState(updatedFieldValues);\r\n        resetFields();\r\n        batchStateUpdate(removeArrayAt, {\r\n            argA: index,\r\n            argC: index,\r\n        }, updatedFieldValues, removeArrayAt(fieldValues, index), true, true);\r\n    };\r\n    const insert$1 = (index, value, shouldFocus = true) => {\r\n        const emptyArray = fillEmptyArray(value);\r\n        const fieldValues = getCurrentFieldsValues();\r\n        const updatedFieldArrayValues = insert(fieldValues, index, mapIds(Array.isArray(value) ? value : [value], keyName));\r\n        setFieldAndValidState(updatedFieldArrayValues);\r\n        resetFields();\r\n        batchStateUpdate(insert, {\r\n            argA: index,\r\n            argB: emptyArray,\r\n            argC: index,\r\n            argD: fillBooleanArray(value),\r\n        }, updatedFieldArrayValues, insert(fieldValues, index));\r\n        focusIndexRef.current = shouldFocus ? index : -1;\r\n    };\r\n    const swap = (indexA, indexB) => {\r\n        const fieldValues = getCurrentFieldsValues();\r\n        swapArrayAt(fieldValues, indexA, indexB);\r\n        resetFields();\r\n        setFieldAndValidState([...fieldValues]);\r\n        batchStateUpdate(swapArrayAt, {\r\n            argA: indexA,\r\n            argB: indexB,\r\n            argC: indexA,\r\n            argD: indexB,\r\n        }, undefined, fieldValues, false);\r\n    };\r\n    const move = (from, to) => {\r\n        const fieldValues = getCurrentFieldsValues();\r\n        moveArrayAt(fieldValues, from, to);\r\n        resetFields();\r\n        setFieldAndValidState([...fieldValues]);\r\n        batchStateUpdate(moveArrayAt, {\r\n            argA: from,\r\n            argB: to,\r\n            argC: from,\r\n            argD: to,\r\n        }, undefined, fieldValues, false);\r\n    };\r\n    Object(react[\"useEffect\"])(() => {\r\n        if (false) {}\r\n        const defaultValues = get(fieldArrayDefaultValuesRef.current, name);\r\n        if (defaultValues && fields.length < defaultValues.length) {\r\n            defaultValues.pop();\r\n            set(fieldArrayDefaultValuesRef.current, name, defaultValues);\r\n        }\r\n        updateWatchedValue(name);\r\n        if (focusIndexRef.current > -1) {\r\n            for (const key in fieldsRef.current) {\r\n                const field = fieldsRef.current[key];\r\n                if (key.startsWith(`${name}[${focusIndexRef.current}]`) &&\r\n                    field.ref.focus) {\r\n                    field.ref.focus();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        focusIndexRef.current = -1;\r\n    }, [fields, name]);\r\n    Object(react[\"useEffect\"])(() => {\r\n        const resetFunctions = resetFieldArrayFunctionRef.current;\r\n        const fieldArrayNames = fieldArrayNamesRef.current;\r\n        if (!getFieldArrayParentName(name)) {\r\n            resetFunctions[name] = (data) => {\r\n                resetFields();\r\n                !data && unset(fieldArrayDefaultValuesRef.current, name);\r\n                unset(shallowFieldsStateRef.current, name);\r\n                memoizedDefaultValues.current = get(data || defaultValuesRef.current, name);\r\n                setFields(mapIds(memoizedDefaultValues.current, keyName));\r\n            };\r\n        }\r\n        return () => {\r\n            resetFields();\r\n            delete resetFunctions[name];\r\n            unset(fieldArrayValuesRef, name);\r\n            fieldArrayNames.delete(name);\r\n        };\r\n    }, []);\r\n    return {\r\n        swap: Object(react[\"useCallback\"])(swap, [name]),\r\n        move: Object(react[\"useCallback\"])(move, [name]),\r\n        prepend: Object(react[\"useCallback\"])(prepend$1, [name]),\r\n        append: Object(react[\"useCallback\"])(append, [name, fields]),\r\n        remove: Object(react[\"useCallback\"])(remove, [name]),\r\n        insert: Object(react[\"useCallback\"])(insert$1, [name]),\r\n        fields,\r\n    };\r\n};\n\nfunction useWatch({ control, name, defaultValue, }) {\r\n    const methods = useFormContext();\r\n    if (false) {}\r\n    const { useWatchFieldsRef, useWatchRenderFunctionsRef, watchInternal, defaultValuesRef, } = control || methods.control;\r\n    const updateValue = Object(react[\"useState\"])()[1];\r\n    const idRef = Object(react[\"useRef\"])();\r\n    const defaultValueRef = Object(react[\"useRef\"])(defaultValue);\r\n    Object(react[\"useEffect\"])(() => {\r\n        if (false) {}\r\n        const id = (idRef.current = generateId());\r\n        const watchFieldsHookRender = useWatchRenderFunctionsRef.current;\r\n        const watchFieldsHook = useWatchFieldsRef.current;\r\n        watchFieldsHook[id] = new Set();\r\n        watchFieldsHookRender[id] = () => updateValue({});\r\n        watchInternal(name, defaultValueRef.current, id);\r\n        return () => {\r\n            delete watchFieldsHook[id];\r\n            delete watchFieldsHookRender[id];\r\n        };\r\n    }, [\r\n        name,\r\n        useWatchRenderFunctionsRef,\r\n        useWatchFieldsRef,\r\n        watchInternal,\r\n        defaultValueRef,\r\n    ]);\r\n    return idRef.current\r\n        ? watchInternal(name, defaultValueRef.current, idRef.current)\r\n        : isUndefined(defaultValue)\r\n            ? isString(name)\r\n                ? get(defaultValuesRef.current, name)\r\n                : Array.isArray(name)\r\n                    ? name.reduce((previous, inputName) => (Object.assign(Object.assign({}, previous), { [inputName]: get(defaultValuesRef.current, inputName) })), {})\r\n                    : defaultValuesRef.current\r\n            : defaultValue;\r\n}\n\nvar getInputValue = (event) => isPrimitive(event) ||\r\n    !isObject(event.target) ||\r\n    (isObject(event.target) && !event.type)\r\n    ? event\r\n    : isUndefined(event.target.value)\r\n        ? event.target.checked\r\n        : event.target.value;\n\nfunction useField({ name, rules, defaultValue, control, onFocus, }) {\r\n    const methods = useFormContext();\r\n    if (false) {}\r\n    const { defaultValuesRef, setValue, register, unregister, trigger, mode, reValidateMode: { isReValidateOnBlur, isReValidateOnChange }, formStateRef: { current: { isSubmitted, touched, errors, dirtyFields }, }, updateFormState, readFormStateRef, fieldsRef, fieldArrayNamesRef, shallowFieldsStateRef, } = control || methods.control;\r\n    const isNotFieldArray = !isNameInFieldArray(fieldArrayNamesRef.current, name);\r\n    const getInitialValue = () => !isUndefined(get(shallowFieldsStateRef.current, name)) && isNotFieldArray\r\n        ? get(shallowFieldsStateRef.current, name)\r\n        : isUndefined(defaultValue)\r\n            ? get(defaultValuesRef.current, name)\r\n            : defaultValue;\r\n    const [value, setInputStateValue] = Object(react[\"useState\"])(getInitialValue());\r\n    const valueRef = Object(react[\"useRef\"])(value);\r\n    const ref = Object(react[\"useRef\"])({\r\n        focus: () => null,\r\n    });\r\n    const onFocusRef = Object(react[\"useRef\"])(onFocus ||\r\n        (() => {\r\n            if (isFunction(ref.current.focus)) {\r\n                ref.current.focus();\r\n            }\r\n            if (false) {}\r\n        }));\r\n    const shouldValidate = Object(react[\"useCallback\"])((isBlurEvent) => !skipValidation(Object.assign({ isBlurEvent,\r\n        isReValidateOnBlur,\r\n        isReValidateOnChange,\r\n        isSubmitted, isTouched: !!get(touched, name) }, mode)), [\r\n        isReValidateOnBlur,\r\n        isReValidateOnChange,\r\n        isSubmitted,\r\n        touched,\r\n        name,\r\n        mode,\r\n    ]);\r\n    const commonTask = Object(react[\"useCallback\"])(([event]) => {\r\n        const data = getInputValue(event);\r\n        setInputStateValue(data);\r\n        valueRef.current = data;\r\n        return data;\r\n    }, []);\r\n    const registerField = Object(react[\"useCallback\"])((shouldUpdateValue) => {\r\n        if (false) {}\r\n        if (fieldsRef.current[name]) {\r\n            fieldsRef.current[name] = Object.assign({ ref: fieldsRef.current[name].ref }, rules);\r\n        }\r\n        else {\r\n            register(Object.defineProperty({\r\n                name,\r\n                focus: onFocusRef.current,\r\n            }, 'value', {\r\n                set(data) {\r\n                    setInputStateValue(data);\r\n                    valueRef.current = data;\r\n                },\r\n                get() {\r\n                    return valueRef.current;\r\n                },\r\n            }), rules);\r\n            shouldUpdateValue = !get(defaultValuesRef.current, name);\r\n        }\r\n        shouldUpdateValue &&\r\n            isNotFieldArray &&\r\n            setInputStateValue(getInitialValue());\r\n    }, [rules, name, register]);\r\n    Object(react[\"useEffect\"])(() => () => unregister(name), [name]);\r\n    Object(react[\"useEffect\"])(() => {\r\n        if (false) {}\r\n        registerField();\r\n    }, [registerField]);\r\n    Object(react[\"useEffect\"])(() => {\r\n        !fieldsRef.current[name] && registerField(true);\r\n    });\r\n    const onBlur = Object(react[\"useCallback\"])(() => {\r\n        if (readFormStateRef.current.touched && !get(touched, name)) {\r\n            set(touched, name, true);\r\n            updateFormState({\r\n                touched,\r\n            });\r\n        }\r\n        shouldValidate(true) && trigger(name);\r\n    }, [name, updateFormState, shouldValidate, trigger, readFormStateRef]);\r\n    const onChange = Object(react[\"useCallback\"])((...event) => setValue(name, commonTask(event), {\r\n        shouldValidate: shouldValidate(),\r\n        shouldDirty: true,\r\n    }), [setValue, name, shouldValidate]);\r\n    return {\r\n        field: {\r\n            onChange,\r\n            onBlur,\r\n            name,\r\n            value,\r\n            ref,\r\n        },\r\n        state: {\r\n            inValid: !get(errors, name),\r\n            isDirty: !!get(dirtyFields, name),\r\n            isTouched: !!get(touched, name),\r\n        },\r\n    };\r\n}\n\nconst Controller = (props) => {\r\n    const { rules, as, render, defaultValue, control, onFocus } = props, rest = __rest(props, [\"rules\", \"as\", \"render\", \"defaultValue\", \"control\", \"onFocus\"]);\r\n    const { field } = useField(props);\r\n    const componentProps = Object.assign(Object.assign({}, rest), field);\r\n    return as\r\n        ? Object(react[\"isValidElement\"])(as)\r\n            ? Object(react[\"cloneElement\"])(as, componentProps)\r\n            : Object(react[\"createElement\"])(as, componentProps)\r\n        : render\r\n            ? render(field)\r\n            : null;\r\n};\n\n\n//# sourceMappingURL=index.esm.js.map\n\n// EXTERNAL MODULE: ./src/components/alerts/index.js\nvar components_alerts = __webpack_require__(\"JrXF\");\n\n// CONCATENATED MODULE: ./src/components/forms/validation.js\nvar __jsx = react_default.a.createElement;\n\n\n\n\nvar validation_FormValidation = function FormValidation(_ref) {\n  var items = _ref.items,\n      onSubmit = _ref.onSubmit,\n      alerts = _ref.alerts;\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors,\n      register = _useForm.register;\n\n  var onSubmitFn = function onSubmitFn(data) {\n    if (onSubmit) {\n      onSubmit(data);\n    }\n  };\n\n  items = items.map(function (item) {\n    item['ref'] = register(item['error']);\n    return item;\n  });\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmitFn),\n    className: \"form flex flex-wrap w-full\"\n  }, alerts && items.map(function (item, i) {\n    if (!errors[item.name]) return null;\n    var msg = errors[item.name].message;\n    if (msg.length === 0) msg = \"\".concat(item.label, \" is required\");\n    return __jsx(\"div\", {\n      className: \"flex flex-col w-full\"\n    }, errors[item.name] && __jsx(\"div\", {\n      className: \"mb-2\",\n      key: i\n    }, __jsx(components_alerts[\"a\" /* default */], {\n      color: \"bg-transparent border-red-500 text-red-500\",\n      borderLeft: true,\n      raised: true\n    }, msg)));\n  }), __jsx(\"div\", {\n    className: \"w-full\"\n  }, items.map(function (item, i) {\n    if (item.type === 'checkbox') {\n      return __jsx(\"div\", {\n        className: \"form-element\"\n      }, item.label && __jsx(\"div\", {\n        className: \"form-label\"\n      }, item.label), __jsx(\"div\", {\n        className: \"flex items-center justify-start space-x-2\"\n      }, item.options.map(function (option, j) {\n        return __jsx(\"label\", {\n          className: \"flex items-center justify-start space-x-2\"\n        }, __jsx(\"input\", {\n          ref: item.ref,\n          type: \"checkbox\",\n          value: option.value,\n          name: item.name,\n          className: \"form-checkbox h-4 w-4 \".concat(errors[item.name] ? 'text-red-500' : '')\n        }), __jsx(\"span\", {\n          className: \"\".concat(errors[item.name] ? 'text-red-500' : '')\n        }, option.label));\n      })));\n    }\n\n    if (item.type === 'radio') {\n      return __jsx(\"div\", {\n        className: \"form-element\"\n      }, item.label && __jsx(\"div\", {\n        className: \"form-label\"\n      }, item.label), __jsx(\"div\", {\n        className: \"flex items-center justify-start space-x-2\"\n      }, item.options.map(function (option, j) {\n        return __jsx(\"label\", {\n          className: \"flex items-center justify-start space-x-2\"\n        }, __jsx(\"input\", {\n          type: \"radio\",\n          value: option.value,\n          name: item.name,\n          ref: register({\n            required: true\n          }),\n          className: \"form-radio h-4 w-4 \".concat(errors[item.name] ? 'text-red-500' : '')\n        }), __jsx(\"span\", {\n          className: \"\".concat(errors[item.name] ? 'text-red-500' : '')\n        }, option.label));\n      })));\n    }\n\n    if (item.type === 'select') {\n      return __jsx(\"div\", {\n        className: \"form-element\"\n      }, item.label && __jsx(\"div\", {\n        className: \"form-label\"\n      }, item.label), __jsx(\"select\", {\n        ref: item.ref,\n        name: item.name,\n        className: \"form-select \".concat(errors[item.name] ? 'border border-red-500' : '')\n      }, item.options.map(function (option, j) {\n        return __jsx(\"option\", {\n          key: j,\n          value: option.value\n        }, option.label);\n      })), !alerts && errors[item.name] && __jsx(\"div\", {\n        className: \"form-error\"\n      }, errors[item.name].message));\n    }\n\n    if (item.type === 'textarea') {\n      return __jsx(react_default.a.Fragment, null, __jsx(\"div\", {\n        className: \"form-element\"\n      }, item.label && __jsx(\"div\", {\n        className: \"form-label\"\n      }, item.label), __jsx(\"textarea\", {\n        ref: item.ref,\n        name: item.name,\n        className: \"form-textarea \".concat(errors[item.name] ? 'border border-red-500' : ''),\n        rows: \"3\",\n        placeholder: item.placeholder\n      }), !alerts && errors[item.name] && __jsx(\"div\", {\n        className: \"form-error\"\n      }, errors[item.name].message)));\n    }\n\n    return __jsx(react_default.a.Fragment, null, __jsx(\"div\", {\n      className: \"form-element\"\n    }, item.label && __jsx(\"div\", {\n      className: \"form-label\"\n    }, item.label), __jsx(\"input\", {\n      ref: item.ref,\n      name: item.name,\n      type: item.type,\n      className: \"form-input \".concat(errors[item.name] ? 'border-red-500' : ''),\n      placeholder: item.placeholder\n    }), !alerts && errors[item.name] && __jsx(\"div\", {\n      className: \"form-error\"\n    }, errors[item.name].message)));\n  })), __jsx(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-default bg-blue-500 hover:bg-blue-600 text-white btn-rounded\"\n  }));\n};\n\n/* harmony default export */ var validation = (validation_FormValidation);\n// EXTERNAL MODULE: ./node_modules/axios/index.js\nvar axios = __webpack_require__(\"vDqi\");\nvar axios_default = /*#__PURE__*/__webpack_require__.n(axios);\n\n// CONCATENATED MODULE: ./src/components/sample-forms/contact-us.js\nvar contact_us_jsx = react_default.a.createElement;\n\n\n\n\n\nvar contact_us_ContactUs = function ContactUs(_ref) {\n  var _ref$message = _ref.message,\n      message = _ref$message === void 0 ? null : _ref$message;\n\n  var _useState = Object(react[\"useState\"])(null),\n      data = _useState[0],\n      onSubmit = _useState[1]; // console.log(\"data--------------------------->>\",data);\n\n\n  axios_default.a.post(\"http://localhost:8000/site/submit/contactus/details\", data).then(function (response) {\n    var res = response.data;\n\n    if (res && res.status == 1) {\n      console.log('res-----dddddddddddddddddddddddddddddddd----->>>', res.response);\n    } else {}\n  })[\"catch\"](function (error) {\n    if (error) throw error;\n  });\n  var items = [{\n    label: 'Name*',\n    error: {\n      required: 'Please enter your name'\n    },\n    name: 'name',\n    type: 'text',\n    placeholder: 'Name'\n  }, {\n    label: 'Email*',\n    error: {\n      required: 'Please enter a valid email'\n    },\n    name: 'email',\n    type: 'email',\n    placeholder: 'Email'\n  }, {\n    label: 'Phone*',\n    error: {\n      required: 'Please enter a job'\n    },\n    name: 'phone',\n    type: 'number',\n    placeholder: 'Phone'\n  }, {\n    label: 'Subject*',\n    error: {\n      required: 'Please enter a subject'\n    },\n    name: 'subject',\n    type: 'text',\n    placeholder: 'Subject'\n  }, {\n    label: 'Reason*',\n    error: {\n      required: 'Please enter reason'\n    },\n    name: \"reason\",\n    type: 'textarea',\n    placeholder: 'Reason of Appoinment'\n  }];\n  return contact_us_jsx(react_default.a.Fragment, null, contact_us_jsx(\"div\", {\n    className: \"flex flex-col\"\n  }, data && message && contact_us_jsx(\"div\", {\n    className: \"w-full mb-4\"\n  }, contact_us_jsx(components_alerts[\"a\" /* default */], {\n    color: \"bg-transparent border-green-500 text-green-500\",\n    borderLeft: true,\n    raised: true\n  }, message)), contact_us_jsx(validation, {\n    items: items,\n    onSubmit: onSubmit\n  })));\n};\n\n/* harmony default export */ var contact_us = __webpack_exports__[\"a\"] = (contact_us_ContactUs);\n\n/***/ })\n\n}]);"}